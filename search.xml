<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo d后 ERROR Deployer not found: git</title>
      <link href="/2020/04/17/hexo-d-hou-error-deployer-not-found-git/"/>
      <url>/2020/04/17/hexo-d-hou-error-deployer-not-found-git/</url>
      
        <content type="html"><![CDATA[<p>$ hexo d<br>ERROR Deployer not found: git</p><pre class=" language-c"><code class="language-c">npm install <span class="token operator">--</span>save hexo<span class="token operator">-</span>deployer<span class="token operator">-</span>git</code></pre><p>即可。</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git hexo d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js 正则表达式 test()方法的使用</title>
      <link href="/2020/04/15/js-zheng-ze-biao-da-shi-test-fang-fa-de-shi-yong/"/>
      <url>/2020/04/15/js-zheng-ze-biao-da-shi-test-fang-fa-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<p>test() 方法是正则表达式的一个方法，用于检测一个字符串是否匹配某个模式.<br>test 方法检查字符串是否与给出的正则表达式模式相匹配，如果是则返回 true，否则就返回 false。</p><p>每个正则表达式都有一个 lastIndex 属性，用于记录上一次匹配结束的位置.</p><p>语法：regexp.test(str) </p><p>在全局匹配模式下</p><p>对于同一个正则对象重复调用就会出现下一次的匹配位置从上一次匹配结束的位置开始,解决方法重置lastIndex为0</p><pre class=" language-c"><code class="language-c">let reg <span class="token operator">=</span> <span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span>\d<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>$<span class="token operator">/</span>g<span class="token punctuation">;</span>    let str <span class="token operator">=</span> <span class="token string">"12"</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//返回true</span>    let <span class="token operator">=</span> <span class="token string">"123"</span><span class="token punctuation">;</span></code></pre><pre><code>console.log(reg.test(str));     //从数字3开始匹配，只有一个数字，故返回false</code></pre><p>重置lastIndex为0</p><pre class=" language-c"><code class="language-c"> let reg <span class="token operator">=</span> <span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span>\d<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>$<span class="token operator">/</span>g<span class="token punctuation">;</span>    let str <span class="token operator">=</span> <span class="token string">"12"</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//返回true</span>    let <span class="token operator">=</span> <span class="token string">"123"</span><span class="token punctuation">;</span>    reg<span class="token punctuation">.</span>lastIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//返回true</span></code></pre><p>在非全局匹配模式下，则不存在这个问题</p><pre class=" language-c"><code class="language-c">let reg <span class="token operator">=</span> <span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span>\d<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>$<span class="token operator">/</span><span class="token punctuation">;</span>    let str <span class="token operator">=</span> <span class="token string">"12"</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//返回true</span>    let <span class="token operator">=</span> <span class="token string">"123"</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//返回true</span></code></pre><p>另外，test()方法和数组的forEach()方法一起使用可能达不到预期结果，在for循环下，同样如此，如下</p><pre class=" language-c"><code class="language-c">  let line <span class="token operator">=</span> <span class="token string">'1a 123 123 12'</span><span class="token punctuation">;</span>    let lines <span class="token operator">=</span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    let reg <span class="token operator">=</span> <span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span>\d<span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token operator">/</span>g<span class="token punctuation">;</span>    let res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    lines<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span> <span class="token function">function</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// flase true 交替出现    </span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>使用forEach方法对数组中字符串进行test测试，会出现flase true 交替出现的现象，先出现false还是true则取决数组第一个元素匹配的结果。</p><p>同样的，在非全局匹配模式下，则不存在这个问题，这里去掉全局匹配g才可得到预期结果</p><pre class=" language-c"><code class="language-c">let line <span class="token operator">=</span> <span class="token string">'1a 123 123 12'</span>    let lines <span class="token operator">=</span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    let reg <span class="token operator">=</span> <span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">[</span>\d<span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token operator">/</span><span class="token punctuation">;</span>    let res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    lines<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span> <span class="token function">function</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// false true true true</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsDOM元素创建构成</title>
      <link href="/2020/04/15/jsdom-yuan-su-chuang-jian-gou-cheng/"/>
      <url>/2020/04/15/jsdom-yuan-su-chuang-jian-gou-cheng/</url>
      
        <content type="html"><![CDATA[<p>DOM元素创建：<br>1，var oE = document.createElement();<br>在元素对象中创建一个元素节点，要与appendChild() 或 insertBefore()方法联合使用。<br>其中，appendChild() 方法在节点的子节点列表末添加新的子节点。<br>      insertBefore() 方法在节点的子节点列表任意位置插入新的节点。<br>2，var att = document.createAttribute();//创建新的属性名<br> att.value = ‘’;//设置属性值<br> oE.setAtttibuteNode(att);<br> 在oE 元素对象中添加新属性节点 att,<br>全版本兼容<br>3，oE.setAttribute(‘name’,’value’);<br>在oE 元素对象中添加新属性节点<br>IE8兼容，IE8以下不兼容<br>4，oE.innerHTML = “”;</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript Dom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery 常用代码集锦(记录一下)</title>
      <link href="/2020/04/14/jquery-chang-yong-dai-ma-ji-jin-ji-lu-yi-xia/"/>
      <url>/2020/04/14/jquery-chang-yong-dai-ma-ji-jin-ji-lu-yi-xia/</url>
      
        <content type="html"><![CDATA[<ol><li>选择或者不选页面上全部复选框</li></ol><pre class=" language-c"><code class="language-c">var tog <span class="token operator">=</span> false<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// or true if they are checked on load</span>$<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> $<span class="token punctuation">(</span><span class="token string">"input[type=checkbox]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">,</span><span class="token operator">!</span>tog<span class="token punctuation">)</span><span class="token punctuation">;</span> tog <span class="token operator">=</span> <span class="token operator">!</span>tog<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol start="2"><li>取得鼠标的X和Y坐标</li></ol><pre class=" language-c"><code class="language-c">$<span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mousemove</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>$<span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>$<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mousemove</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>$<span class="token punctuation">(</span><span class="token string">'#XY'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"Gbin1 X Axis : "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>pageX <span class="token operator">+</span> <span class="token string">" | Gbin1 Y Axis "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>pageY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol start="3"><li>判断一个图片是否加载完全</li></ol><pre class=" language-c"><code class="language-c">$<span class="token punctuation">(</span><span class="token string">'#theGBin1Image'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span> <span class="token string">'image.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'This Image Has Been Loaded'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol start="4"><li>判断cookie是否激活或者关闭</li></ol><pre class=" language-c"><code class="language-c">var dt <span class="token operator">=</span> new <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dt<span class="token punctuation">.</span><span class="token function">setSeconds</span><span class="token punctuation">(</span>dt<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">"cookietest=1; expires="</span> <span class="token operator">+</span> dt<span class="token punctuation">.</span><span class="token function">toGMTString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var cookiesEnabled <span class="token operator">=</span> document<span class="token punctuation">.</span>cookie<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"cookietest="</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>cookiesEnabled<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//cookies have not been enabled</span><span class="token punctuation">}</span></code></pre><ol start="5"><li>强制过期cookie</li></ol><pre class=" language-c"><code class="language-c">var date <span class="token operator">=</span> new <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>date<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>x <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>$<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">'example'</span><span class="token punctuation">,</span> <span class="token string">'foo'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> expires<span class="token punctuation">:</span> date <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol start="6"><li>在表单中禁用“回车键”，表单的操作中需要防止用户意外的提交表单</li></ol><pre class=" language-c"><code class="language-c">$<span class="token punctuation">(</span><span class="token string">"#form"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keypress</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>which <span class="token operator">==</span> <span class="token number">13</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> false<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol start="7"><li>清除所有的表单数据</li></ol><pre class=" language-c"><code class="language-c">function <span class="token function">clearForm</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// iterate over all of the inputs for the form</span> <span class="token comment" spellcheck="true">// element that was passed in</span> $<span class="token punctuation">(</span><span class="token string">':input'</span><span class="token punctuation">,</span> form<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> var type <span class="token operator">=</span> this<span class="token punctuation">.</span>type<span class="token punctuation">;</span> var tag <span class="token operator">=</span> this<span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// normalize case</span> <span class="token comment" spellcheck="true">// it's ok to reset the value attr of text inputs,</span> <span class="token comment" spellcheck="true">// password inputs, and textareas</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">'text'</span> <span class="token operator">||</span> type <span class="token operator">==</span> <span class="token string">'password'</span> <span class="token operator">||</span> tag <span class="token operator">==</span> <span class="token string">'textarea'</span><span class="token punctuation">)</span>  this<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// checkboxes and radios need to have their checked state cleared</span> <span class="token comment" spellcheck="true">// but should *not* have their 'value' changed</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">'checkbox'</span> <span class="token operator">||</span> type <span class="token operator">==</span> <span class="token string">'radio'</span><span class="token punctuation">)</span>  this<span class="token punctuation">.</span>checked <span class="token operator">=</span> false<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// select elements need to have their 'selectedIndex' property set to -1</span> <span class="token comment" spellcheck="true">// (this works for both single and multiple select elements)</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span> <span class="token string">'select'</span><span class="token punctuation">)</span>  this<span class="token punctuation">.</span>selectedIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>8.禁止多次递交表单</p><pre class=" language-c"><code class="language-c">$<span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> $<span class="token punctuation">(</span><span class="token string">'form'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> jQuery<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span> <span class="token string">"disabledOnSubmit"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  jQuery<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span> <span class="token string">"disabledOnSubmit"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> submited<span class="token punctuation">:</span> true <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  $<span class="token punctuation">(</span><span class="token string">'input[type=submit], input[type=button]'</span><span class="token punctuation">,</span> this<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  $<span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">,</span> <span class="token string">"disabled"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> true<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> false<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol start="9"><li>自动将数据导入selectbox中</li></ol><pre class=" language-c"><code class="language-c">$<span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> $<span class="token punctuation">(</span><span class="token string">"select#ctlJob"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> $<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">"/select.php"</span><span class="token punctuation">,</span><span class="token punctuation">{</span>id<span class="token punctuation">:</span> $<span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ajax<span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">function</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">{</span>  var options <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>var i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  options <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;option value="'</span> <span class="token operator">+</span> j<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>optionValue <span class="token operator">+</span> <span class="token string">'">'</span> <span class="token operator">+</span> j<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>optionDisplay <span class="token operator">+</span> <span class="token string">'&lt;/option>'</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  $<span class="token punctuation">(</span><span class="token string">"select#ctlPerson"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><ol start="10"><li>创建一个嵌套的过滤器</li></ol><pre class=" language-c"><code class="language-c"><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">":not(:has(.selected))"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//去掉所有不包含class为.selected的元素</span></code></pre><ol start="11"><li>使用has()来判断一个元素是否包含特定的class或者元素</li></ol><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">//jQuery 1.4.* includes support for the has method. This method will find </span><span class="token comment" spellcheck="true">//if a an element contains a certain other element class or whatever it is </span><span class="token comment" spellcheck="true">//you are looking for and do anything you want to them. </span>$<span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">".email"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"email_icon"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol start="12"><li>使用jQuery切换样式</li></ol><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">//Look for the media-type you wish to switch then set the href to your new style sheet </span>$<span class="token punctuation">(</span><span class="token string">'link[media='</span>screen<span class="token string">']'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">,</span> <span class="token string">'Alternative.css'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol start="13"><li>如何正确使用ToggleClass</li></ol><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">//Toggle class allows you to add or remove a class </span><span class="token comment" spellcheck="true">//from an element depending on the presence of that </span><span class="token comment" spellcheck="true">//class. Where some developers would use: </span>a<span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">'blueButton'</span><span class="token punctuation">)</span> <span class="token operator">?</span> a<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'blueButton'</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> a<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'blueButton'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//toggleClass allows you to easily do this using </span>a<span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">'blueButton'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol start="14"><li>使用jQuery来替换一个元素</li></ol><pre class=" language-c"><code class="language-c">$<span class="token punctuation">(</span><span class="token string">'#thatdiv'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceWith</span><span class="token punctuation">(</span><span class="token string">'fnuh'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>15.绑定一个函数到一个事件</p><pre class=" language-c"><code class="language-c">$<span class="token punctuation">(</span><span class="token string">'#foo'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'User clicked on "foo."'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol start="16"><li>使用jQuery预加载图片</li></ol><pre class=" language-c"><code class="language-c">jQuery<span class="token punctuation">.</span>preloadImages <span class="token operator">=</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">for</span><span class="token punctuation">(</span>var i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token string">').attr('</span>src'<span class="token punctuation">,</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Usage $.preloadImages('image1.gif', '/path/to/image2.png', 'some/image3.jpg');</span></code></pre><ol start="17"><li>设置任何匹配一个选择器的事件处理程序</li></ol><pre class=" language-c"><code class="language-c">$<span class="token punctuation">(</span><span class="token string">'button.someClass'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">live</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> someFunction<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Note that in jQuery 1.4.2, the delegate and undelegate options have been</span> <span class="token comment" spellcheck="true">//introduced to replace live as they offer better support for context</span> <span class="token comment" spellcheck="true">//For example, in terms of a table where before you would use..</span> <span class="token comment" spellcheck="true">// .live()</span> $<span class="token punctuation">(</span><span class="token string">"table"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> $<span class="token punctuation">(</span><span class="token string">"td"</span><span class="token punctuation">,</span> this<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">live</span><span class="token punctuation">(</span><span class="token string">"hover"</span><span class="token punctuation">,</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> $<span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"hover"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Now use..</span> $<span class="token punctuation">(</span><span class="token string">"table"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delegate</span><span class="token punctuation">(</span><span class="token string">"td"</span><span class="token punctuation">,</span> <span class="token string">"hover"</span><span class="token punctuation">,</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> $<span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"hover"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol start="18"><li>自动的滚动到页面特定区域</li></ol><pre class=" language-c"><code class="language-c">jQuery<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>autoscroll <span class="token operator">=</span> <span class="token function">function</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span> <span class="token punctuation">{</span> $<span class="token punctuation">(</span><span class="token string">'html,body'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span> <span class="token punctuation">{</span>scrollTop<span class="token punctuation">:</span> $<span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//Then to scroll to the class/area you wish to get to like this:</span>$<span class="token punctuation">(</span><span class="token string">'.area_name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">autoscroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>19.检测各种浏览器</p><pre class=" language-c"><code class="language-c">Detect <span class="token function">Safari</span> <span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span> $<span class="token punctuation">.</span>browser<span class="token punctuation">.</span>safari<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Detect IE6 and <span class="token function">over</span> <span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span>browser<span class="token punctuation">.</span>msie <span class="token operator">&amp;&amp;</span> $<span class="token punctuation">.</span>browser<span class="token punctuation">.</span>version <span class="token operator">></span> <span class="token number">6</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Detect IE6 and <span class="token function">below</span> <span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span>browser<span class="token punctuation">.</span>msie <span class="token operator">&amp;&amp;</span> $<span class="token punctuation">.</span>browser<span class="token punctuation">.</span>version <span class="token operator">&lt;=</span> <span class="token number">6</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Detect FireFox <span class="token number">2</span> and <span class="token function">above</span> <span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span>browser<span class="token punctuation">.</span>mozilla <span class="token operator">&amp;&amp;</span> $<span class="token punctuation">.</span>browser<span class="token punctuation">.</span>version <span class="token operator">>=</span> <span class="token string">'1.8'</span> <span class="token punctuation">)</span></code></pre><p>20.限制textarea的字符数量</p><pre class=" language-c"><code class="language-c">jQuery<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>maxLength <span class="token operator">=</span> <span class="token function">function</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">{</span> this<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> var type <span class="token operator">=</span> this<span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> var inputType <span class="token operator">=</span> this<span class="token punctuation">.</span>type<span class="token operator">?</span> this<span class="token punctuation">.</span>type<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> null<span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">"input"</span> <span class="token operator">&amp;&amp;</span> inputType <span class="token operator">==</span> <span class="token string">"text"</span> <span class="token operator">||</span> inputType <span class="token operator">==</span> <span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//Apply the standard maxLength</span>  this<span class="token punctuation">.</span>maxLength <span class="token operator">=</span> max<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">"textarea"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  this<span class="token punctuation">.</span>onkeypress <span class="token operator">=</span> <span class="token function">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>  var ob <span class="token operator">=</span> e <span class="token operator">||</span> event<span class="token punctuation">;</span>  var keyCode <span class="token operator">=</span> ob<span class="token punctuation">.</span>keyCode<span class="token punctuation">;</span>  var hasSelection <span class="token operator">=</span> document<span class="token punctuation">.</span>selection<span class="token operator">?</span> document<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">:</span> this<span class="token punctuation">.</span>selectionStart <span class="token operator">!=</span> this<span class="token punctuation">.</span>selectionEnd<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token operator">!</span><span class="token punctuation">(</span>this<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">>=</span> max <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>keyCode <span class="token operator">></span> <span class="token number">50</span> <span class="token operator">||</span> keyCode <span class="token operator">==</span> <span class="token number">32</span> <span class="token operator">||</span> keyCode <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> keyCode <span class="token operator">==</span> <span class="token number">13</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>ob<span class="token punctuation">.</span>ctrlKey <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>ob<span class="token punctuation">.</span>altKey <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>hasSelection<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  this<span class="token punctuation">.</span>onkeyup <span class="token operator">=</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>this<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">></span> max<span class="token punctuation">)</span><span class="token punctuation">{</span>   this<span class="token punctuation">.</span>value <span class="token operator">=</span> this<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Usage:</span>$<span class="token punctuation">(</span><span class="token string">'#gbin1textarea'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maxLength</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>21.使用jQuery克隆元素</p><pre class=" language-c"><code class="language-c">var cloned <span class="token operator">=</span> $<span class="token punctuation">(</span><span class="token string">'#gbin1div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol start="22"><li>元素屏幕居中</li></ol><pre class=" language-c"><code class="language-c">jQuery<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>center <span class="token operator">=</span> <span class="token function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> this<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'position'</span><span class="token punctuation">,</span><span class="token string">'absolute'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> this<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'top'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span> $<span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> this<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token operator">+</span>$<span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> this<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'left'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span> $<span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> this<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token operator">+</span>$<span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> this<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//Use the above function as: $('#gbin1div').center();</span></code></pre><p>23 .简单的tab标签切换</p><pre class=" language-c"><code class="language-c"><span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">'#meeting_tabs ul li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">jQuery</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'tabulous_active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'tabulous_active'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">'#tabs_container>.pane:eq('</span><span class="token operator">+</span><span class="token function">jQuery</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">')'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"meeting_tabs"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>      <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"tabulous_active"</span><span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> title<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>进行中<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> title<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>未开始<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> title<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>已结束<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> title<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>全部<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span> <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"tabs_container"</span><span class="token operator">></span>   <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"pane"</span>  <span class="token operator">></span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>   <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"pane"</span>  <span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>   <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"pane"</span>  <span class="token operator">></span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>   <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"pane"</span>  <span class="token operator">></span><span class="token number">4</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">'#meeting_tabs ul li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">jQuery</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'tabulous_active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'tabulous_active'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">'#tabs_container>.pane:eq('</span><span class="token operator">+</span><span class="token function">jQuery</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">')'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"meeting_tabs"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>      <span class="token operator">&lt;</span>li class<span class="token operator">=</span><span class="token string">"tabulous_active"</span><span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> title<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>进行中<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> title<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>未开始<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> title<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>已结束<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> title<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>全部<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span> <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"tabs_container"</span><span class="token operator">></span>   <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"pane"</span>  <span class="token operator">></span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>   <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"pane"</span>  <span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>   <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"pane"</span>  <span class="token operator">></span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>   <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"pane"</span>  <span class="token operator">></span><span class="token number">4</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></code></pre><p>以上这篇jQuery 常用代码</p>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery 常用代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm install卡顿问题记录</title>
      <link href="/2020/04/11/npm-install-qia-dun-wen-ti-ji-lu/"/>
      <url>/2020/04/11/npm-install-qia-dun-wen-ti-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>遇到的问题</p><pre class=" language-c"><code class="language-c">npm install <span class="token operator">-</span>g @angular<span class="token operator">/</span>cli</code></pre><p>安装angular cli工具时，发现进度条一直卡住不动，相信很多朋友也遇到过。原因应该是国内的网络连接npm速度较慢，甚至很多东西都无法下载安装。那么如何解决这个问题呢？</p><p>方案一：安装cnpm镜像<br>这个是比较常用的方法，我首先也是使用了这个方法。cnpm的安装方法，参考<a href="http://npm.taobao.org/" target="_blank" rel="noopener">http://npm.taobao.org/</a></p><pre class=" language-c"><code class="language-c">npm install <span class="token operator">-</span>g cnpm <span class="token operator">--</span>registry<span class="token operator">=</span>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org</code></pre><p>cmd输入以上命令就可以了，然后输入</p><pre class=" language-c"><code class="language-c">cnpm install <span class="token operator">-</span>g @angular<span class="token operator">/</span>cli</code></pre><p>后面的操作跟不使用镜像的操作是差不多的。<br>但是笔者在后续使用过程中遇到了一些问题，运行ng eject后发生了一些错误，所以放弃了这个方案，采用了方案二。</p><p>方案二：使用代理registry<br>在网上查阅了一些资料后，决定使用代理的方式，方法也很简单，就是</p><pre class=" language-c"><code class="language-c">npm config set registry https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org</code></pre><p>然后后续的install等命令还是通过npm运作，而不是cnpm。<br>有点小强迫症的我还是喜欢npm install…</p>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node install </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>table表格去掉默认样式的方法！代码</title>
      <link href="/2020/04/08/table-biao-ge-qu-diao-mo-ren-yang-shi-de-fang-fa-dai-ma/"/>
      <url>/2020/04/08/table-biao-ge-qu-diao-mo-ren-yang-shi-de-fang-fa-dai-ma/</url>
      
        <content type="html"><![CDATA[<p>今天在写代码的时候发现表格具有一些默认的样式有时候并不需要，它会影响美观!可以通过以下方式去掉它。<br>cellpadding – 代表单元格外面距离,用于隔单元格与单元格空间 。<br>cellspacing– 代表表格边框与单元格补白距离,单元格补白间距离。<br>方法1：（在css样式中设置）</p><pre class=" language-cpp"><code class="language-cpp">table<span class="token punctuation">{</span>  border<span class="token operator">-</span>collapse<span class="token operator">:</span>collapse<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//表格的边框合并，如果相邻，则共用一个边框。</span>  border<span class="token operator">-</span>spacing<span class="token operator">:</span>0px<span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//设置行与单元格边框的间距。</span> <span class="token punctuation">}</span></code></pre><p>方法2：(在行内设置)</p><pre class=" language-cpp"><code class="language-cpp"><span class="token operator">&lt;</span>table border<span class="token operator">=</span><span class="token string">"0"</span> cellspacing<span class="token operator">=</span><span class="token string">"0"</span> cellpadding<span class="token operator">=</span><span class="token string">"0"</span><span class="token operator">></span><span class="token number">1</span>下面是我的代码，大家可以更加加深了解！！！<span class="token punctuation">,</span><span class="token operator">&lt;</span>style type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token operator">></span> table<span class="token punctuation">{</span>  border<span class="token operator">-</span>collapse<span class="token operator">:</span>collapse<span class="token punctuation">;</span>    border<span class="token operator">-</span>spacing<span class="token operator">:</span>0px<span class="token punctuation">;</span>   <span class="token punctuation">}</span> img<span class="token punctuation">{</span>  width<span class="token operator">:</span>40px<span class="token punctuation">;</span>  height<span class="token operator">:</span>40px<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>div<span class="token operator">></span> <span class="token operator">&lt;</span>table<span class="token operator">></span>  <span class="token operator">&lt;</span>tr<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span>商品<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span>单价<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span>数量<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span>操作<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>  <span class="token operator">&lt;</span>tr<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"images/f1.jpg"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>丹穆尼通勤波点印花毛衣<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token number">180.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>  <span class="token operator">&lt;</span>tr<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"images/f2.jpg"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>预售太平洋女装连衣裙<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token number">765.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token number">4</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>  <span class="token operator">&lt;</span>tr<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"images/f3.jpg"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>丹穆尼通勤红色小外套<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token number">456.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>  <span class="token operator">&lt;</span>tr<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"images/f4.jpg"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>曼巴森秋装新款套头衫<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token number">140.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>   <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span></code></pre><p>运行结果1：（未去掉样式）<br><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200408175113414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzaDE1OTc0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>运行结果2：（去掉样式后）<br><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200408175132965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzaDE1OTc0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> table表格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开始Vue的学习笔记</title>
      <link href="/2020/04/07/kai-shi-vue-de-xue-xi-bi-ji/"/>
      <url>/2020/04/07/kai-shi-vue-de-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="day01"><a href="#day01" class="headerlink" title="day01"></a>day01</h1><h3 id="Vue-是什么？"><a href="#Vue-是什么？" class="headerlink" title="Vue 是什么？"></a>Vue 是什么？</h3><ul><li><strong>Vue (读音 /vjuː/，类似于 **view</strong>) 是一套用于构建用户界面的渐进式框架**</li><li>vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合</li></ul><h3 id="使用Vue将helloworld-渲染到页面上"><a href="#使用Vue将helloworld-渲染到页面上" class="headerlink" title="使用Vue将helloworld  渲染到页面上"></a>使用Vue将helloworld  渲染到页面上</h3><img  src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="./images/day01-1.png"  ><h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><ul><li>本质就是自定义属性</li><li>Vue中指定都是以 v- 开头 </li></ul><h3 id="v-cloak"><a href="#v-cloak" class="headerlink" title="v-cloak"></a>v-cloak</h3><ul><li><p>防止页面加载时出现闪烁问题</p><pre class=" language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">  <span class="token comment" spellcheck="true">/*     1、通过属性选择器 选择到 带有属性 v-cloak的标签  让他隐藏 */</span>  <span class="token selector"><span class="token attribute">[v-cloak]</span></span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 元素隐藏    */</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 2、 让带有插值 语法的   添加 v-cloak 属性          在 数据渲染完场之后，v-cloak 属性会被自动去除，         v-cloak一旦移除也就是没有这个属性了  属性选择器就选择不到该标签         也就是对应的标签会变为可见    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">v-cloak</span>  <span class="token punctuation">></span></span>{{msg}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//  el   指定元素 id 是 app 的元素  </span>      el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//  data  里面存储的是数据</span>      data<span class="token punctuation">:</span> <span class="token punctuation">{</span>        msg<span class="token punctuation">:</span> <span class="token string">'Hello Vue'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre></li></ul><h3 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h3><ul><li>v-text指令用于将数据填充到标签中，作用于插值表达式类似，但是没有闪动问题</li><li>如果数据中有HTML标签会将html标签一并输出</li><li>注意：此处为单向绑定，数据对象上的值改变，插值会发生变化；但是当插值发生变化并不会影响数据对象的值</li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--          注意:在指令中不要写插值语法  直接写对应的变量名称         在 v-text 中 赋值的时候不要在写 插值语法        一般属性中不加 {{}}  直接写 对应 的数据名     --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Vue  中只有在标签的 内容中 才用插值语法 --></span>        {{msg}}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>            msg<span class="token punctuation">:</span> <span class="token string">'Hello Vue.js'</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h3><ul><li><p>用法和v-text 相似  但是他可以将HTML片段填充到标签中</p></li><li><p>可能有安全问题, 一般只在可信任内容上使用 <code>v-html</code>，<strong>永不</strong>用在用户提交的内容上</p></li><li><p>它与v-text区别在于v-text输出的是纯文本，浏览器不会对其再进行html解析，但v-html会将其当html标签解析后输出。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>　　<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 输出：html标签在渲染的时候被解析 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>{{message}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 输出：&lt;span>通过双括号绑定&lt;/span> --></span>　　<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 输出：&lt;span>html标签在渲染的时候被源码输出&lt;/span> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">　　<span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>　　el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>　　data<span class="token punctuation">:</span> <span class="token punctuation">{</span>　　　　message<span class="token punctuation">:</span> <span class="token string">"&lt;span>通过双括号绑定&lt;/span>"</span><span class="token punctuation">,</span>　　　　html<span class="token punctuation">:</span> <span class="token string">"&lt;span>html标签在渲染的时候被解析&lt;/span>"</span><span class="token punctuation">,</span>　　　　text<span class="token punctuation">:</span> <span class="token string">"&lt;span>html标签在渲染的时候被源码输出&lt;/span>"</span><span class="token punctuation">,</span>　　<span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre></li></ul><h3 id="v-pre"><a href="#v-pre" class="headerlink" title="v-pre"></a>v-pre</h3><ul><li>显示原始信息跳过编译过程</li><li>跳过这个元素和它的子元素的编译过程。</li><li><strong>一些静态的内容不需要编译加这个指令可以加快渲染</strong></li></ul><pre class=" language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-pre</span><span class="token punctuation">></span></span>{{ this will not be compiled }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--  显示的是{{ this will not be compiled }}  --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-pre</span><span class="token punctuation">></span></span>{{msg}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--   即使data里面定义了msg这里仍然是显示的{{msg}}  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>            msg<span class="token punctuation">:</span> <span class="token string">'Hello Vue.js'</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a><strong>v-once</strong></h3><ul><li>执行一次性的插值【当数据改变时，插值处的内容不会继续更新】</li></ul><pre class=" language-html"><code class="language-html">  <span class="token comment" spellcheck="true">&lt;!-- 即使data里面定义了msg 后期我们修改了 仍然显示的是第一次data里面存储的数据即 Hello Vue.js  --></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-once</span><span class="token punctuation">></span></span>{{ msg}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>            msg<span class="token punctuation">:</span> <span class="token string">'Hello Vue.js'</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="双向数据绑定"><a href="#双向数据绑定" class="headerlink" title="双向数据绑定"></a>双向数据绑定</h3><ul><li>当数据发生变化的时候，视图也就发生变化</li><li>当视图发生变化的时候，数据也会跟着同步变化</li></ul><h4 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h4><ul><li><strong>v-model</strong>是一个指令，限制在 <code>&lt;input&gt;、&lt;select&gt;、&lt;textarea&gt;、components</code>中使用</li></ul><pre class=" language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>{{msg}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>          当输入框中内容改变的时候，  页面上的msg  会自动更新        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>msg<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h3 id="mvvm"><a href="#mvvm" class="headerlink" title="mvvm"></a>mvvm</h3><ul><li>MVC 是后端的分层开发概念； MVVM是前端视图层的概念，主要关注于 视图层分离，也就是说：MVVM把前端的视图层，分为了 三部分 Model, View , VM ViewModel</li><li>m   model  <ul><li>数据层   Vue  中 数据层 都放在 data 里面</li></ul></li><li>v   view     视图   <ul><li>Vue  中  view      即 我们的HTML页面  </li></ul></li><li>vm   （view-model）     控制器     将数据和视图层建立联系      <ul><li>vm 即  Vue 的实例  就是 vm  </li></ul></li></ul><h3 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h3><ul><li>用来绑定事件的</li><li>形式如：v-on:click  缩写为 @click;</li></ul><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="images/@click.png"  width="90%"><h3 id="v-on事件函数中传入参数"><a href="#v-on事件函数中传入参数" class="headerlink" title="v-on事件函数中传入参数"></a>v-on事件函数中传入参数</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>{{num}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 如果事件直接绑定函数名称，那么默认会传递事件对象作为事件函数的第一个参数 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>handle1<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>点击1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 2、如果事件绑定函数调用，那么事件对象必须作为最后一个参数显示传递，                 并且事件对象的名称必须是$event             --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>handle2(123, 456, $event)<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>点击2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                num<span class="token punctuation">:</span> <span class="token number">0</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>                handle1<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                handle2<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> p1<span class="token punctuation">,</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> p1<span class="token punctuation">)</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h3><ul><li>在事件处理程序中调用 <code>event.preventDefault()</code> 或 <code>event.stopPropagation()</code> 是非常常见的需求。</li><li>Vue 不推荐我们操作DOM    为了解决这个问题，Vue.js 为 <code>v-on</code> 提供了<strong>事件修饰符</strong></li><li>修饰符是由点开头的指令后缀来表示的</li></ul><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 阻止单击事件继续传播 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click.stop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>doThis<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 提交事件不再重载页面 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">v-on:</span>submit.prevent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>onSubmit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 修饰符可以串联   即阻止冒泡也阻止默认事件 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click.stop.prevent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>doThat<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --></span><span class="token comment" spellcheck="true">&lt;!-- 即事件不是从内部元素触发的 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click.self</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>doThat<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>使用修饰符时，顺序很重要；相应的代码会以同样的顺序产生。因此，用 v-on:click.prevent.self 会阻止所有的点击，而 v-on:click.self.prevent 只会阻止对元素自身的点击。</code></pre><h3 id="按键修饰符"><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a>按键修饰符</h3><ul><li>在做项目中有时会用到键盘事件，在监听键盘事件时，我们经常需要检查详细的按键。Vue 允许为 <code>v-on</code> 在监听键盘事件时添加按键修饰符</li></ul><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 只有在 `keyCode` 是 13 时调用 `vm.submit()` --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name"><span class="token namespace">v-on:</span>keyup.13</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- -当点击enter 时调用 `vm.submit()` --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name"><span class="token namespace">v-on:</span>keyup.enter</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--当点击enter或者space时  时调用 `vm.alertMe()`   --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>keyup.enter.space</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alertMe<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>常用的按键修饰符.enter =>    enter键.tab => tab键.delete (捕获“删除”和“退格”按键) =>  删除键.esc => 取消键.space =>  空格键.up =>  上.down =>  下.left =>  左.right =>  右<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>              submit<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>              alertMe<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="自定义按键修饰符别名"><a href="#自定义按键修饰符别名" class="headerlink" title="自定义按键修饰符别名"></a>自定义按键修饰符别名</h3><ul><li>在Vue中可以通过<code>config.keyCodes</code>自定义按键修饰符别名</li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    预先定义了keycode 116（即F5）的别名为f5，因此在文字输入框中按下F5，会触发prompt方法    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>keydown.f5</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prompt()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>keyCodes<span class="token punctuation">.</span>f5 <span class="token operator">=</span> <span class="token number">116</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>        methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>            prompt<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我是 F5！'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h3><ul><li>v-bind 指令被用来响应地更新 HTML 属性</li><li>v-bind:href    可以缩写为    :href;</li></ul><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 绑定一个属性 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>imageSrc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 缩写 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>imageSrc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><h4 id="绑定对象"><a href="#绑定对象" class="headerlink" title="绑定对象"></a>绑定对象</h4><ul><li>我们可以给v-bind:class 一个对象，以动态地切换class。</li><li>注意：v-bind:class指令可以与普通的class特性共存</li></ul><pre class=" language-html"><code class="language-html">1、 v-bind 中支持绑定一个对象     如果绑定的是一个对象 则 键为 对应的类名  值 为对应data中的数据 <span class="token comment" spellcheck="true">&lt;!--     HTML最终渲染为 &lt;ul class="box textColor textSize">&lt;/ul>    注意：        textColor，textSize  对应的渲染到页面上的CSS类名            isColor，isSize  对应vue data中的数据  如果为true 则对应的类名 渲染到页面上         当 isColor 和 isSize 变化时，class列表将相应的更新，        例如，将isSize改成false，        class列表将变为 &lt;ul class="box textColor">&lt;/ul>--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-bind:</span>class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{textColor:isColor, textSize:isSize}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>学习Vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>学习Node<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>学习React<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span></span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>activeColor,<span class="token property">fontSize</span><span class="token punctuation">:</span>activeSize<span class="token punctuation">}</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>对象语法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sript</span><span class="token punctuation">></span></span>var vm= new Vue({    el:'.box',    data:{        isColor:true,        isSize:true，        activeColor:"red",        activeSize:"25px",    }})<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sript</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span></span><span class="token punctuation">{</span>        <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px dashed <span class="token hexcode">#f0f</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.textColor</span></span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#f00</span><span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#eef</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.textSize</span></span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">30</span>px<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span>bold<span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><h4 id="绑定class"><a href="#绑定class" class="headerlink" title="绑定class"></a>绑定class</h4><pre class=" language-html"><code class="language-html">2、  v-bind 中支持绑定一个数组    数组中classA和 classB 对应为data中的数据这里的classA  对用data 中的  classA这里的classB  对用data 中的  classB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[classA, classB]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>学习Vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>学习Node<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>学习React<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">var</span> vm<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    el<span class="token punctuation">:</span><span class="token string">'.box'</span><span class="token punctuation">,</span>    data<span class="token punctuation">:</span><span class="token punctuation">{</span>        classA<span class="token punctuation">:</span>‘textColor‘<span class="token punctuation">,</span>        classB<span class="token punctuation">:</span>‘textSize‘    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span></span><span class="token punctuation">{</span>        <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px dashed <span class="token hexcode">#f0f</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.textColor</span></span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#f00</span><span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#eef</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.textSize</span></span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">30</span>px<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span>bold<span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><h4 id="绑定对象和绑定数组-的区别"><a href="#绑定对象和绑定数组-的区别" class="headerlink" title="绑定对象和绑定数组 的区别"></a>绑定对象和绑定数组 的区别</h4><ul><li>绑定对象的时候 对象的属性 即要渲染的类名 对象的属性值对应的是 data 中的数据 </li><li>绑定数组的时候数组里面存的是data 中的数据 </li></ul><h4 id="绑定style"><a href="#绑定style" class="headerlink" title="绑定style"></a>绑定style</h4><pre class=" language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span></span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">styleObject</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>绑定样式对象<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>'<span class="token comment" spellcheck="true">&lt;!-- CSS 属性名可以用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用单引号括起来)    --></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span></span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> activeColor, <span class="token property">fontSize</span><span class="token punctuation">:</span> fontSize,<span class="token property">background</span><span class="token punctuation">:</span><span class="token string">'red'</span> <span class="token punctuation">}</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>内联样式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--组语法可以将多个样式对象应用到同一个元素 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span></span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">[styleObj<span class="token number">1</span>, styleObj<span class="token number">2</span>]</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>      data<span class="token punctuation">:</span> <span class="token punctuation">{</span>        styleObject<span class="token punctuation">:</span> <span class="token punctuation">{</span>          color<span class="token punctuation">:</span> <span class="token string">'green'</span><span class="token punctuation">,</span>          fontSize<span class="token punctuation">:</span> <span class="token string">'30px'</span><span class="token punctuation">,</span>          background<span class="token punctuation">:</span><span class="token string">'red'</span>        <span class="token punctuation">}</span>，        activeColor<span class="token punctuation">:</span> <span class="token string">'green'</span><span class="token punctuation">,</span>           fontSize<span class="token punctuation">:</span> <span class="token string">"30px"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      styleObj1<span class="token punctuation">:</span> <span class="token punctuation">{</span>             color<span class="token punctuation">:</span> <span class="token string">'red'</span>       <span class="token punctuation">}</span><span class="token punctuation">,</span>       styleObj2<span class="token punctuation">:</span> <span class="token punctuation">{</span>            fontSize<span class="token punctuation">:</span> <span class="token string">'30px'</span>       <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h3><h4 id="v-if-使用场景"><a href="#v-if-使用场景" class="headerlink" title="v-if 使用场景"></a>v-if 使用场景</h4><ul><li>1- 多个元素 通过条件判断展示或者隐藏某个元素。或者多个元素</li><li>2- 进行两个视图之间的切换</li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--  判断是否加载，如果为真，就加载，否则不加载--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           如果flag为true则显示,false不显示!        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span><span class="token string">"#app"</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span><span class="token punctuation">{</span>            flag<span class="token punctuation">:</span><span class="token boolean">true</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>----------------------------------------------------------    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>type <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>A<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       A    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- v-else-if紧跟在v-if或v-else-if之后   表示v-if条件不成立时执行--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>type <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>B<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       B    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>type <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>C<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       C    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- v-else紧跟在v-if或v-else-if之后--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>       Not A/B/C    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>      data<span class="token punctuation">:</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> <span class="token string">'C'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="v-show-和-v-if的区别"><a href="#v-show-和-v-if的区别" class="headerlink" title="v-show 和 v-if的区别"></a>v-show 和 v-if的区别</h4><ul><li>v-show本质就是标签display设置为none，控制隐藏<ul><li>v-show只编译一次，后面其实就是控制css，而v-if不停的销毁和创建，故v-show性能更好一点。</li></ul></li><li>v-if是动态的向DOM树内添加或者删除DOM元素<ul><li>v-if切换有一个局部编译/卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件</li></ul></li></ul><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><h4 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h4><ul><li>用于循环的数组里面的值可以是对象，也可以是普通元素  </li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>example-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token comment" spellcheck="true">&lt;!-- 循环结构-遍历数组      item 是我们自己定义的一个名字  代表数组里面的每一项      items对应的是 data中的数组--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    {{ item.message }}  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token punctuation">:</span> <span class="token string">'#example-1'</span><span class="token punctuation">,</span>  data<span class="token punctuation">:</span> <span class="token punctuation">{</span>    items<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span> message<span class="token punctuation">:</span> <span class="token string">'Foo'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span> message<span class="token punctuation">:</span> <span class="token string">'Bar'</span> <span class="token punctuation">}</span>    <span class="token punctuation">]</span>，  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><ul><li><strong>不推荐</strong>同时使用 <code>v-if</code> 和 <code>v-for</code></li><li>当 <code>v-if</code> 与 <code>v-for</code> 一起使用时，<code>v-for</code> 具有比 <code>v-if</code> 更高的优先级。</li></ul><pre class=" language-html"><code class="language-html">   <span class="token comment" spellcheck="true">&lt;!--  循环结构-遍历对象        v 代表   对象的value        k  代表对象的 键         i  代表索引        ---></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>v<span class="token punctuation">=</span><span class="token punctuation">=</span>13<span class="token punctuation">'</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>(v,k,i) in obj<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>{{v + '---' + k + '---' + i}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token punctuation">:</span> <span class="token string">'#example-1'</span><span class="token punctuation">,</span>  data<span class="token punctuation">:</span> <span class="token punctuation">{</span>    items<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span> message<span class="token punctuation">:</span> <span class="token string">'Foo'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span> message<span class="token punctuation">:</span> <span class="token string">'Bar'</span> <span class="token punctuation">}</span>    <span class="token punctuation">]</span>，    obj<span class="token punctuation">:</span> <span class="token punctuation">{</span>        uname<span class="token punctuation">:</span> <span class="token string">'zhangsan'</span><span class="token punctuation">,</span>        age<span class="token punctuation">:</span> <span class="token number">13</span><span class="token punctuation">,</span>        gender<span class="token punctuation">:</span> <span class="token string">'female'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><ul><li>key 的作用<ul><li><strong>key来给每个节点做一个唯一标识</strong></li><li><strong>key的作用主要是为了高效的更新虚拟DOM</strong></li></ul></li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in items<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><h3 id="案例选项卡"><a href="#案例选项卡" class="headerlink" title="案例选项卡"></a>案例选项卡</h3><h4 id="1、-HTML-结构"><a href="#1、-HTML-结构" class="headerlink" title="1、 HTML 结构"></a>1、 HTML 结构</h4><pre class=" language-html"><code class="language-html">`    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--  tab栏  --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>apple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>orange<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>lemon<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>              <span class="token comment" spellcheck="true">&lt;!--  对应显示的图片 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>current<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/apple.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/orange.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/lemon.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>`</code></pre><h4 id="2、-提供的数据"><a href="#2、-提供的数据" class="headerlink" title="2、 提供的数据"></a>2、 提供的数据</h4><pre class=" language-js"><code class="language-js">         list<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>                    id<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                    title<span class="token punctuation">:</span> <span class="token string">'apple'</span><span class="token punctuation">,</span>                    path<span class="token punctuation">:</span> <span class="token string">'img/apple.png'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                    id<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                    title<span class="token punctuation">:</span> <span class="token string">'orange'</span><span class="token punctuation">,</span>                    path<span class="token punctuation">:</span> <span class="token string">'img/orange.png'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                    id<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>                    title<span class="token punctuation">:</span> <span class="token string">'lemon'</span><span class="token punctuation">,</span>                    path<span class="token punctuation">:</span> <span class="token string">'img/lemon.png'</span>                <span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><h4 id="3、-把数据渲染到页面"><a href="#3、-把数据渲染到页面" class="headerlink" title="3、 把数据渲染到页面"></a>3、 把数据渲染到页面</h4><ul><li><p>把tab栏 中的数替换到页面上</p><ul><li>把 data 中 title  利用 v-for 循环渲染到页面上 </li><li>把 data 中 path利用 v-for 循环渲染到页面上 </li></ul><pre class=" language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                  <span class="token comment" spellcheck="true">&lt;!--                      1、绑定key的作用 提高Vue的性能                     2、 key 需要是唯一的标识 所以需要使用id， 也可以使用index ，                        index 也是唯一的                     3、 item 是 数组中对应的每一项                      4、 index 是 每一项的 索引                --></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>item.id<span class="token punctuation">'</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>(item,index) in list<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>{{item.title}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>item.id<span class="token punctuation">'</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>(item, index) in list<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- :  是 v-bind 的简写   绑定属性使用 v-bind --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.path<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">new</span>  <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//  指定 操作元素 是 id 为app 的 </span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                list<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>                    id<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                    title<span class="token punctuation">:</span> <span class="token string">'apple'</span><span class="token punctuation">,</span>                    path<span class="token punctuation">:</span> <span class="token string">'img/apple.png'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                    id<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                    title<span class="token punctuation">:</span> <span class="token string">'orange'</span><span class="token punctuation">,</span>                    path<span class="token punctuation">:</span> <span class="token string">'img/orange.png'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                    id<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>                    title<span class="token punctuation">:</span> <span class="token string">'lemon'</span><span class="token punctuation">,</span>                    path<span class="token punctuation">:</span> <span class="token string">'img/lemon.png'</span>                <span class="token punctuation">}</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre></li></ul><h4 id="4、-给每一个tab栏添加事件-并让选中的高亮"><a href="#4、-给每一个tab栏添加事件-并让选中的高亮" class="headerlink" title="4、 给每一个tab栏添加事件,并让选中的高亮"></a>4、 给每一个tab栏添加事件,并让选中的高亮</h4><ul><li><p>4.1 、让默认的第一项tab栏高亮</p><ul><li>tab栏高亮 通过添加类名active 来实现   （CSS  active 的样式已经提前写好）<ul><li>在data 中定义一个 默认的  索引 currentIndex  为  0 </li><li>给第一个li 添加 active 的类名  <ul><li>通过动态绑定class 来实现   第一个li 的索引为 0     和 currentIndex   的值刚好相等</li><li>currentIndex     ===  index  如果相等  则添加类名 active  否则 添加 空类名</li></ul></li></ul></li></ul></li><li><p>4.2 、让默认的第一项tab栏对应的div 显示 </p><ul><li>实现思路 和 第一个 tab 实现思路一样  只不过 这里控制第一个div 显示的类名是 current</li></ul><pre class=" language-html"><code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!-- 动态绑定class   有 active   类名高亮  无 active   不高亮--></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span>  <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>currentIndex<span class="token punctuation">=</span><span class="token punctuation">=</span>index?<span class="token punctuation">"</span>active<span class="token punctuation">"</span>:<span class="token punctuation">"</span><span class="token punctuation">"</span><span class="token punctuation">'</span></span>           <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>item.id<span class="token punctuation">'</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>(item,index) in list<span class="token punctuation">'</span></span>           <span class="token punctuation">></span></span>{{item.title}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 动态绑定class   有 current  类名显示  无 current  隐藏--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>currentIndex<span class="token punctuation">=</span><span class="token punctuation">=</span>index?<span class="token punctuation">"</span>current<span class="token punctuation">"</span>:<span class="token punctuation">"</span><span class="token punctuation">"</span><span class="token punctuation">'</span></span>        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>item.id<span class="token punctuation">'</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>(item, index) in list<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- :  是 v-bind 的简写   绑定属性使用 v-bind --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.path<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">new</span>  <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                currentIndex<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 选项卡当前的索引  默认为 0  </span>                list<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>                    id<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                    title<span class="token punctuation">:</span> <span class="token string">'apple'</span><span class="token punctuation">,</span>                    path<span class="token punctuation">:</span> <span class="token string">'img/apple.png'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                    id<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                    title<span class="token punctuation">:</span> <span class="token string">'orange'</span><span class="token punctuation">,</span>                    path<span class="token punctuation">:</span> <span class="token string">'img/orange.png'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                    id<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>                    title<span class="token punctuation">:</span> <span class="token string">'lemon'</span><span class="token punctuation">,</span>                    path<span class="token punctuation">:</span> <span class="token string">'img/lemon.png'</span>                <span class="token punctuation">}</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre></li><li><p>4.3 、点击每一个tab栏 当前的高亮 其他的取消高亮 </p><ul><li><p>给每一个li添加点击事件    </p></li><li><p>让当前的索引 index  和  当前 currentIndex 的  值 进项比较 </p></li><li><p>如果相等 则当前li  添加active 类名 当前的 li 高亮  当前对应索引的 div 添加 current 当前div 显示 其他隐藏</p><pre class=" language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!--  通过v-on 添加点击事件   需要把当前li 的索引传过去                 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>change(index)<span class="token punctuation">'</span></span>                                                   <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>currentIndex<span class="token punctuation">=</span><span class="token punctuation">=</span>index?<span class="token punctuation">"</span>active<span class="token punctuation">"</span>:<span class="token punctuation">"</span><span class="token punctuation">"</span><span class="token punctuation">'</span></span>                                       <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>item.id<span class="token punctuation">'</span></span>                     <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>(item,index) in list<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>{{item.title}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>currentIndex<span class="token punctuation">=</span><span class="token punctuation">=</span>index?<span class="token punctuation">"</span>current<span class="token punctuation">"</span>:<span class="token punctuation">"</span><span class="token punctuation">"</span><span class="token punctuation">'</span></span>                  <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>item.id<span class="token punctuation">'</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>(item, index) in list<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.path<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">new</span>  <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                currentIndex<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 选项卡当前的索引  默认为 0  </span>                list<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>                    id<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                    title<span class="token punctuation">:</span> <span class="token string">'apple'</span><span class="token punctuation">,</span>                    path<span class="token punctuation">:</span> <span class="token string">'img/apple.png'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                    id<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                    title<span class="token punctuation">:</span> <span class="token string">'orange'</span><span class="token punctuation">,</span>                    path<span class="token punctuation">:</span> <span class="token string">'img/orange.png'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                    id<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>                    title<span class="token punctuation">:</span> <span class="token string">'lemon'</span><span class="token punctuation">,</span>                    path<span class="token punctuation">:</span> <span class="token string">'img/lemon.png'</span>                <span class="token punctuation">}</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>                change<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 通过传入过来的索引来让当前的  currentIndex  和点击的index 值 相等 </span>                    <span class="token comment" spellcheck="true">//  从而实现 控制类名    </span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>清除浮动的四种方法，各种的优缺点</title>
      <link href="/2020/04/07/qing-chu-fu-dong-de-si-chong-fang-fa-ge-chong-de-you-que-dian/"/>
      <url>/2020/04/07/qing-chu-fu-dong-de-si-chong-fang-fa-ge-chong-de-you-que-dian/</url>
      
        <content type="html"><![CDATA[<p>为什么要清除浮动？</p><p>清除浮动主要是为了解决，父元素因为子级元素浮动引起的内部高度为0的问题</p><p>1.如下，我给父盒子设置一个boder，内部放两个盒子一个big 一个small，未给big和small设置浮动，则他们会默认撑开父盒子<br><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200407183808284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzaDE1OTc0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>2.当我给内部两个盒子加上float属性的时候<br><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200407183817989.png" alt="在这里插入图片描述"></p><p>顶部深蓝色盒子就会顶上来，然后父盒子因为没设置高度，变成一条线，big和small已经浮动了</p><p>总结一下：</p><p>当父元素不给高度的时候，</p><p>内部元素不浮动时会撑开</p><p>而浮动的时候，父元素变成一条线</p><p>这时候很多人会想到新建标签clear：both和float 方法，但是这两种方法并不推荐使用！</p><p>什么是clear：both</p><p>clear：both：本质就是闭合浮动， 就是让父盒子闭合出口和入口，不让子盒子出来</p><p>清除浮动的方法（最常用的4种）<br>1.额外标签法（在最后一个浮动标签后，新加一个标签，给其设置clear：both；）（不推荐）</p><!DOCTYPE html><html lang="en"><head>    <meta charset="UTF-8">    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <meta http-equiv="X-UA-Compatible" content="ie=edge">    <title>Document</title>    <style>    .fahter{        width: 400px;        border: 1px solid deeppink;    }    .big{        width: 200px;        height: 200px;        background: darkorange;        float: left;    }    .small{        width: 120px;        height: 120px;        background: darkmagenta;        float: left;    }    .footer{        width: 900px;        height: 100px;        background: darkslateblue;    }    .clear{        clear:both;    }    </style><meta name="generator" content="Hexo 4.2.0"><link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"></head><body>    <div class="fahter">        <div class="big">big</div>        <div class="small">small</div>        <div class="clear">额外标签法</div>    </div>    <div class="footer"></div></body></html>此时<p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200407183930350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzaDE1OTc0NQ==,size_16,color_FFFFFF,t_70" alt="&lt;html lang=&quot;en&quot;&gt;"></p><p> 如果我们清除了浮动，父元素自动检测子盒子最高的高度，然后与其同高。</p><p>优点：通俗易懂，方便</p><p>缺点：添加无意义标签，语义化差</p><p>不建议使用。</p><p>2.父级添加overflow属性（父元素添加overflow:hidden）（不推荐）</p><p>通过触发BFC方式，实现清除浮动</p><pre><code>.fahter{    width: 400px;    border: 1px solid deeppink;    overflow: hidden;}</code></pre><p>优点：代码简洁</p><p>缺点：内容增多的时候容易造成不会自动换行导致内容被隐藏掉，无法显示要溢出的元素</p><p>不推荐使用</p><p>3.使用after伪元素清除浮动（推荐使用）</p><pre><code>.clearfix:after{/*伪元素是行内元素 正常浏览器清除浮动方法*/    content: &quot;&quot;;    display: block;    height: 0;    clear:both;    visibility: hidden;}.clearfix{    *zoom: 1;/*ie6清除浮动的方式 *号只有IE6-IE7执行，其他浏览器不执行*/}</code></pre><body>    <div class="fahter clearfix">        <div class="big">big</div>        <div class="small">small</div>        <!--<div class="clear">额外标签法</div>-->    </div>    <div class="footer"></div><script>!function(e){var c=Array.prototype.slice.call(document.querySelectorAll("img[data-original]"));function i(){for(var r=0;r<c.length;r++)t=c[r],0<=(n=t.getBoundingClientRect()).bottom&&0<=n.left&&n.top<=(e.innerHeight||document.documentElement.clientHeight)&&function(){var t,n,e,i,o=c[r];t=o,n=function(){c=c.filter(function(t){return o!==t})},e=new Image,i=t.getAttribute("data-original"),e.onload=function(){t.src=i,n&&n()},e.src=i}();var t,n}i(),e.addEventListener("scroll",function(){var t,n;t=i,n=e,clearTimeout(t.tId),t.tId=setTimeout(function(){t.call(n)},500)})}(this);</script><script>window.addEventListener("load",function(){var t=/\.(gif|jpg|jpeg|tiff|png)$/i,r=/^data:image\/[a-z]+;base64,/;Array.prototype.slice.call(document.querySelectorAll("img[data-original]")).forEach(function(a){var e=a.parentNode;"A"===e.tagName&&(e.href.match(t)||e.href.match(r))&&(e.href=a.dataset.original)})});</script></body>优点：符合闭合浮动思想，结构语义化正确<p>缺点：ie6-7不支持伪元素：after，使用zoom:1触发hasLayout.</p><p>推荐使用</p><p>4.使用before和after双伪元素清除浮动</p><pre><code> .clearfix:after,.clearfix:before{    content: &quot;&quot;;    display: table;}.clearfix:after{    clear: both;}.clearfix{    *zoom: 1;}</code></pre> <div class="fahter clearfix">        <div class="big">big</div>        <div class="small">small</div>    </div>    <div class="footer"></div>优点：代码更简洁<p>缺点：用zoom:1触发hasLayout.</p><p>推荐使用</p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 清除浮动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery课堂笔记总汇</title>
      <link href="/2020/04/05/jquery-ke-tang-bi-ji-zong-hui/"/>
      <url>/2020/04/05/jquery-ke-tang-bi-ji-zong-hui/</url>
      
        <content type="html"><![CDATA[<h1 id="day01-jQuery"><a href="#day01-jQuery" class="headerlink" title="day01 - jQuery"></a>day01 - jQuery</h1><blockquote><p>学习目标：</p><p>能够说出什么是 jQuery<br>能够说出 jQuery 的优点<br>能够简单使用 jQuery<br>能够说出 DOM 对象和 jQuery 对象的区别<br>能够写出常用的 jQuery 选择器<br>能够操作 jQuery 样式<br>能够写出常用的 jQuery 动画 </p></blockquote><h2 id="1-1-jQuery-介绍"><a href="#1-1-jQuery-介绍" class="headerlink" title="1.1. jQuery 介绍"></a>1.1. jQuery 介绍</h2><h3 id="1-1-1-JavaScript-库"><a href="#1-1-1-JavaScript-库" class="headerlink" title="1.1.1 JavaScript 库"></a>1.1.1 JavaScript 库</h3><p>​    JavaScript库：即 library，是一个封装好的特定的集合（方法和函数）。从封装一大堆函数的角度理解库，就是在这个库中，封装了很多预先定义好的函数在里面，比如动画animate、hide、show，比如获取元素等。</p><blockquote><p>简单理解： 就是一个JS 文件，里面对我们原生js代码进行了封装，存放到里面。这样我们可以快速高效的使用这些封装好的功能了。</p><p>比如 jQuery，就是为了快速方便的操作DOM，里面基本都是函数（方法）。</p></blockquote><p>​    常见的JavaScript 库：jQuery、Prototype、YUI、Dojo、Ext JS、移动端的zepto等，这些库都是对原生 JavaScript 的封装，内部都是用 JavaScript 实现的，我们主要学习的是 jQuery。</p><h3 id="1-1-2-jQuery的概念"><a href="#1-1-2-jQuery的概念" class="headerlink" title="1.1.2 jQuery的概念"></a>1.1.2 jQuery的概念</h3><p>​    jQuery总体概况如下 :</p><ul><li><p>jQuery 是一个快速、简洁的 JavaScript 库，其设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。</p></li><li><p>j 就是 JavaScript；   Query 查询； 意思就是查询js，把js中的DOM操作做了封装，我们可以快速的查询使用里面的功能。</p></li><li><p>jQuery 封装了 JavaScript 常用的功能代码，优化了 DOM 操作、事件处理、动画设计和 Ajax 交互。</p></li><li><p>学习jQuery本质： 就是学习调用这些函数（方法）。</p></li><li><p>jQuery 出现的目的是加快前端人员的开发速度，我们可以非常方便的调用和使用它，从而提高开发效率。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-6ijK2GmT-1586099747803)(images/jQuery概述.jpg)]</p></li></ul><h3 id="1-1-3-jQuery的优点"><a href="#1-1-3-jQuery的优点" class="headerlink" title="1.1.3 jQuery的优点"></a>1.1.3 jQuery的优点</h3><ol><li>轻量级。核心文件才几十kb，不会影响页面加载速度。</li><li>跨浏览器兼容，基本兼容了现在主流的浏览器。</li><li>链式编程、隐式迭代。</li><li>对事件、样式、动画支持，大大简化了DOM操作。</li><li>支持插件扩展开发。有着丰富的第三方的插件，例如：树形菜单、日期控件、轮播图等。</li><li>免费、开源。</li></ol><h2 id="1-2-jQuery-的基本使用"><a href="#1-2-jQuery-的基本使用" class="headerlink" title="1.2. jQuery 的基本使用"></a>1.2. jQuery 的基本使用</h2><h3 id="1-2-1-jQuery-的下载"><a href="#1-2-1-jQuery-的下载" class="headerlink" title="1.2.1 jQuery 的下载"></a>1.2.1 jQuery 的下载</h3><p>​    jQuery的官网地址： <a href="https://jquery.com/，官网即可下载最新版本。" target="_blank" rel="noopener">https://jquery.com/，官网即可下载最新版本。</a></p><blockquote><p> 各个版本的下载：<a href="https://code.jquery.com/" target="_blank" rel="noopener">https://code.jquery.com/</a></p></blockquote><p>​    版本介绍：</p><blockquote><p>1x ：兼容 IE 678 等低版本浏览器， 官网不再更新</p><p>2x ：不兼容 IE 678 等低版本浏览器， 官网不再更新</p><p>3x ：不兼容 IE 678 等低版本浏览器， 是官方主要更新维护的版本</p></blockquote><h3 id="1-2-2-体验jQuery"><a href="#1-2-2-体验jQuery" class="headerlink" title="1.2.2. 体验jQuery"></a>1.2.2. 体验jQuery</h3><p>​    步骤：</p><ul><li>引入jQuery文件。</li><li>在文档最末尾插入 script 标签，书写体验代码。</li><li>$(‘div’).hide() 可以隐藏盒子。</li></ul><h3 id="1-2-3-jQuery的入口函数"><a href="#1-2-3-jQuery的入口函数" class="headerlink" title="1.2.3. jQuery的入口函数"></a>1.2.3. jQuery的入口函数</h3><p>​    jQuery中常见的两种入口函数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 第一种: 简单易用。</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token operator">...</span>  <span class="token comment" spellcheck="true">// 此处是页面 DOM 加载完成的入口</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 第二种: 繁琐，但是也可以实现</span><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token operator">...</span>  <span class="token comment" spellcheck="true">//  此处是页面DOM加载完成的入口</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>​    总结：</p><ol><li>等着 DOM 结构渲染完毕即可执行内部代码，不必等到所有外部资源加载完成，jQuery 帮我们完成了封装。</li><li>相当于原生 js 中的 DOMContentLoaded。</li><li>不同于原生 js 中的 load 事件是等页面文档、外部的 js 文件、css文件、图片加载完毕才执行内部代码。</li><li>更推荐使用第一种方式。</li></ol><h3 id="1-2-4-jQuery中的顶级对象"><a href="#1-2-4-jQuery中的顶级对象" class="headerlink" title="1.2.4. jQuery中的顶级对象$"></a>1.2.4. jQuery中的顶级对象$</h3><ol><li>$是 jQuery 的别称，在代码中可以使用 jQuery 代替，但一般为了方便，通常都直接使用 $ 。</li><li>$是jQuery的顶级对象，相当于原生JavaScript中的 window。把元素利用$包装成jQuery对象，就可以调用jQuery 的方法。</li></ol><h3 id="1-2-5-jQuery-对象和-DOM-对象"><a href="#1-2-5-jQuery-对象和-DOM-对象" class="headerlink" title="1.2.5.  jQuery 对象和 DOM 对象"></a>1.2.5.  jQuery 对象和 DOM 对象</h3><p>​    使用 jQuery 方法和原生JS获取的元素是不一样的，总结如下 : </p><ol><li>用原生 JS 获取来的对象就是 DOM 对象</li><li>jQuery 方法获取的元素就是 jQuery 对象。</li><li>jQuery 对象本质是： 利用$对DOM 对象包装后产生的对象（伪数组形式存储）。</li></ol><blockquote><p>注意：</p><p>只有 jQuery 对象才能使用 jQuery 方法，DOM 对象则使用原生的 JavaScirpt 方法。</p></blockquote><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-pNjdwLbc-1586099747803)(images/jQuery对象和DOM对象.png)]</p><h3 id="1-2-6-jQuery-对象和-DOM-对象转换"><a href="#1-2-6-jQuery-对象和-DOM-对象转换" class="headerlink" title="1.2.6.  jQuery 对象和 DOM 对象转换"></a>1.2.6.  jQuery 对象和 DOM 对象转换</h3><p>​    DOM 对象与 jQuery 对象之间是可以相互转换的。因为原生js 比 jQuery 更大，原生的一些属性和方法 jQuery没有给我们封装. 要想使用这些属性和方法需要把jQuery对象转换为DOM对象才能使用。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 1.DOM对象转换成jQuery对象，方法只有一种</span><span class="token keyword">var</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 获取DOM对象</span><span class="token keyword">var</span> jQueryObject <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>box<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 把DOM对象转换为 jQuery 对象</span><span class="token comment" spellcheck="true">// 2.jQuery 对象转换为 DOM 对象有两种方法：</span><span class="token comment" spellcheck="true">//   2.1 jQuery对象[索引值]</span><span class="token keyword">var</span> domObject1 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">//   2.2 jQuery对象.get(索引值)</span><span class="token keyword">var</span> domObject2 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></code></pre><p>总结：实际开发比较常用的是把DOM对象转换为jQuery对象，这样能够调用功能更加强大的jQuery中的方法。</p><h2 id="1-3-jQuery-选择器"><a href="#1-3-jQuery-选择器" class="headerlink" title="1.3. jQuery 选择器"></a>1.3. jQuery 选择器</h2><p>​    原生 JS 获取元素方式很多，很杂，而且兼容性情况不一致，因此 jQuery 给我们做了封装，使获取元素统一标准。</p><h3 id="1-3-1-基础选择器"><a href="#1-3-1-基础选择器" class="headerlink" title="1.3.1. 基础选择器"></a>1.3.1. 基础选择器</h3><pre class=" language-js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"选择器"</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//  里面选择器直接写 CSS 选择器即可，但是要加引号 </span></code></pre><p>​    [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-3DQ3cSaE-1586099747804)(images/基础选择器.png)]</p><h3 id="1-3-2-层级选择器"><a href="#1-3-2-层级选择器" class="headerlink" title="1.3.2. 层级选择器"></a>1.3.2. 层级选择器</h3><p>​    层级选择器最常用的两个分别为：后代选择器和子代选择器。</p><p>​    [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-f76TaTf2-1586099747804)(images/层级选择器.png)]</p><p><strong>基础选择器和层级选择器案例代码</strong></p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>我是div<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"nav"</span><span class="token operator">></span>我是nav div<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>p<span class="token operator">></span>我是p<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>我是ul 的<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>我是ul 的<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>                <span class="token operator">&lt;</span>li<span class="token operator">></span>我是ul 的<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".nav"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul li"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h3 id="1-3-3-筛选选择器"><a href="#1-3-3-筛选选择器" class="headerlink" title="1.3.3. 筛选选择器"></a>1.3.3. 筛选选择器</h3><p>​    筛选选择器，顾名思义就是在所有的选项中选择满足条件的进行筛选选择。常见如下 :</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-nfsR5hF9-1586099747804)(images/筛选选择器.png)]</p><p><strong>案例代码</strong></p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>多个里面筛选几个<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>多个里面筛选几个<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>多个里面筛选几个<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>多个里面筛选几个<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>多个里面筛选几个<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>多个里面筛选几个<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>ol<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>多个里面筛选几个<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>多个里面筛选几个<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>多个里面筛选几个<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>多个里面筛选几个<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>多个里面筛选几个<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>多个里面筛选几个<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ol<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul li:first"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"color"</span><span class="token punctuation">,</span> <span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul li:eq(2)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"color"</span><span class="token punctuation">,</span> <span class="token string">"blue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ol li:odd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"color"</span><span class="token punctuation">,</span> <span class="token string">"skyblue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ol li:even"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"color"</span><span class="token punctuation">,</span> <span class="token string">"pink"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><p>另:  jQuery中还有一些筛选方法，类似DOM中的通过一个节点找另外一个节点，父、子、兄以外有所加强。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-sDLQVIbu-1586099747805)(images/relation.png)]</p><p>偏重于记忆，演示代码略。</p><h3 id="1-3-4-知识铺垫"><a href="#1-3-4-知识铺垫" class="headerlink" title="1.3.4 知识铺垫"></a>1.3.4 知识铺垫</h3><ul><li>jQuery 设置样式</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'属性'</span><span class="token punctuation">,</span> <span class="token string">'值'</span><span class="token punctuation">)</span>    </code></pre><ul><li>jQuery 里面的排他思想</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 想要多选一的效果，排他思想：当前元素设置样式，其余的兄弟元素清除样式。</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span>“color”<span class="token punctuation">,</span>”red”<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">css</span><span class="token punctuation">(</span>“color”<span class="token punctuation">,</span>””<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>隐式迭代</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 遍历内部 DOM 元素（伪数组形式存储）的过程就叫做隐式迭代。</span><span class="token comment" spellcheck="true">// 简单理解：给匹配到的所有元素进行循环遍历，执行相应的方法，而不用我们再进行循环，简化我们的操作，方便我们调用。</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 页面中所有的div全部隐藏，不用循环操作</span></code></pre><ul><li>链式编程</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 链式编程是为了节省代码量，看起来更优雅。</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">,</span> <span class="token string">'red'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sibling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><h3 id="1-3-5-案例：淘宝服饰精品案例"><a href="#1-3-5-案例：淘宝服饰精品案例" class="headerlink" title="1.3.5 案例：淘宝服饰精品案例"></a>1.3.5 案例：淘宝服饰精品案例</h3><blockquote><p>思路分析:<br>1.核心原理：鼠标经过左侧盒子某个小li，就让内容区盒子相对应图片显示，其余的图片隐藏。<br>2.需要得到当前小li 的索引号，就可以显示对应索引号的图片<br>3.jQuery 得到当前元素索引号 $(this).index()<br>4.中间对应的图片，可以通过  eq(index) 方法去选择<br>5.显示元素 show()   隐藏元素 hide()</p></blockquote><p>​    代码实现略。(详情参考源代码)</p><h2 id="1-4-jQuery-样式操作"><a href="#1-4-jQuery-样式操作" class="headerlink" title="1.4.  jQuery 样式操作"></a>1.4.  jQuery 样式操作</h2><p>​    jQuery中常用的样式操作有两种：css() 和 设置类样式方法</p><h3 id="1-4-1-方法1-操作-css-方法"><a href="#1-4-1-方法1-操作-css-方法" class="headerlink" title="1.4.1. 方法1: 操作 css 方法"></a>1.4.1. 方法1: 操作 css 方法</h3><p>​    jQuery 可以使用 css 方法来修改简单元素样式； 也可以操作类，修改多个样式。</p><p>​    常用以下三种形式 : </p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 1.参数只写属性名，则是返回属性值</span><span class="token keyword">var</span> strColor <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 2.  参数是属性名，属性值，逗号分隔，是设置一组样式，属性必须加引号，值如果是数字可以不用跟单位和引号</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">''</span>color<span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span>red<span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 3.  参数可以是对象形式，方便设置多组样式。属性名和属性值用冒号隔开， 属性可以不用加引号</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">"color"</span><span class="token punctuation">:</span><span class="token string">"white"</span><span class="token punctuation">,</span><span class="token string">"font-size"</span><span class="token punctuation">:</span><span class="token string">"20px"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>​    注意：css() 多用于样式少时操作，多了则不太方便。</p><h3 id="1-4-2-方法2-设置类样式方法"><a href="#1-4-2-方法2-设置类样式方法" class="headerlink" title="1.4.2. 方法2: 设置类样式方法"></a>1.4.2. 方法2: 设置类样式方法</h3><p>​    作用等同于以前的 classList，可以操作类样式， 注意操作类里面的参数不要加点。</p><p>​    常用的三种设置类样式方法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 1.添加类</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"current"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 2.删除类</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"current"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 3.切换类</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"current"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>​    注意：</p><ol><li>设置类样式方法比较适合样式多时操作，可以弥补css()的不足。</li><li>原生 JS 中 className 会覆盖元素原先里面的类名，jQuery 里面类操作只是对指定类进行操作，不影响原先的类名。</li></ol><h3 id="1-4-3-案例：tab-栏切换"><a href="#1-4-3-案例：tab-栏切换" class="headerlink" title="1.4.3. 案例：tab 栏切换"></a>1.4.3. 案例：tab 栏切换</h3><blockquote><p>思路分析:<br>1.点击上部的li，当前li 添加current类，其余兄弟移除类。<br>2.点击的同时，得到当前li 的索引号<br>3.让下部里面相应索引号的item显示，其余的item隐藏</p></blockquote><p>​    代码实现略。(详情参考源代码)</p><h2 id="1-5-jQuery-效果"><a href="#1-5-jQuery-效果" class="headerlink" title="1.5. jQuery 效果"></a>1.5. jQuery 效果</h2><p>​    jQuery 给我们封装了很多动画效果，最为常见的如下：</p><ul><li>显示隐藏：show() / hide() / toggle() ;</li><li>划入画出：slideDown() / slideUp() / slideToggle() ; </li><li>淡入淡出：fadeIn() / fadeOut() / fadeToggle() / fadeTo() ; </li><li>自定义动画：animate() ;</li></ul><blockquote><p>注意：</p><p>动画或者效果一旦触发就会执行，如果多次触发，就造成多个动画或者效果排队执行。</p><p>jQuery为我们提供另一个方法，可以停止动画排队：stop() ;</p></blockquote><h3 id="1-5-1-显示隐藏"><a href="#1-5-1-显示隐藏" class="headerlink" title="1.5.1. 显示隐藏"></a>1.5.1. 显示隐藏</h3><p>​    显示隐藏动画，常见有三个方法：show() / hide() / toggle() ;</p><p>​    语法规范如下:</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-eOEs1YG9-1586099747805)(images/show.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-zkKlPM53-1586099747805)(images/hide.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-1ULFgdkl-1586099747806)(images/toggle.png)]</p><p><strong>代码演示</strong></p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>显示<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>隐藏<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>切换<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 一般情况下，我们都不加参数直接显示隐藏就可以了</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h3 id="1-5-2-滑入滑出"><a href="#1-5-2-滑入滑出" class="headerlink" title="1.5.2. 滑入滑出"></a>1.5.2. 滑入滑出</h3><p>​    滑入滑出动画，常见有三个方法：slideDown() / slideUp() / slideToggle() ; </p><p>​    语法规范如下:</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-h3akfLgY-1586099747806)(images/slideDown.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-sCN6jAcz-1586099747806)(images/slideUp.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-iBWn4fZI-1586099747806)(images/slideToggle.png)]</p><p><strong>代码演示</strong></p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>下拉滑动<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>上拉滑动<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>切换滑动<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 下滑动 slideDown()</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 上滑动 slideUp()</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 滑动切换 slideToggle()</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideToggle</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><blockquote><p>小案例：下拉菜单略（详情参看源码）。</p></blockquote><h3 id="1-5-3-淡入淡出"><a href="#1-5-3-淡入淡出" class="headerlink" title="1.5.3 淡入淡出"></a>1.5.3 淡入淡出</h3><p>​    淡入淡出动画，常见有四个方法：fadeIn() / fadeOut() / fadeToggle() / fadeTo() ; </p><p>​    语法规范如下:</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-YeyMQC8R-1586099747807)(images/fadeIn.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-yP0QWO6Y-1586099747807)(images/fadeOut.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-zjSNWVKL-1586099747807)(images/fadeToggle.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-mpSGBsn6-1586099747808)(images/fadeTo.png)]</p><p><strong>代码演示</strong></p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>淡入效果<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>淡出效果<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>淡入淡出切换<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>修改透明度<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 淡入 fadeIn()</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 淡出 fadeOut()</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 淡入淡出切换 fadeToggle()</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeToggle</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//  修改透明度 fadeTo() 这个速度和透明度要必须写</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeTo</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h3 id="1-5-4-自定义动画"><a href="#1-5-4-自定义动画" class="headerlink" title="1.5.4 自定义动画"></a>1.5.4 自定义动画</h3><p>​    自定义动画非常强大，通过参数的传递可以模拟以上所有动画，方法为：animate() ;</p><p>​    语法规范如下:</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-cU6lg4W5-1586099747808)(images/animate.png)]</p><p><strong>代码演示</strong></p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>动起来<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                    left<span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span>                    top<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>                    opacity<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token number">4</span><span class="token punctuation">,</span>                    width<span class="token punctuation">:</span> <span class="token number">500</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h3 id="1-5-5-停止动画排队"><a href="#1-5-5-停止动画排队" class="headerlink" title="1.5.5 停止动画排队"></a>1.5.5 停止动画排队</h3><p>​    动画或者效果一旦触发就会执行，如果多次触发，就造成多个动画或者效果排队执行。</p><p>​    停止动画排队的方法为：stop() ; </p><ul><li>stop() 方法用于停止动画或效果。</li><li>stop() 写到动画或者效果的前面， 相当于停止结束上一次的动画。</li></ul><p>​        总结: 每次使用动画之前，先调用 stop() ,在调用动画。</p><h3 id="1-5-6-事件切换"><a href="#1-5-6-事件切换" class="headerlink" title="1.5.6. 事件切换"></a>1.5.6. 事件切换</h3><p>​    jQuery中为我们添加了一个新事件 hover() ; 功能类似 css 中的伪类 :hover 。介绍如下</p><p><strong>语法</strong></p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">[</span>over<span class="token punctuation">,</span><span class="token punctuation">]</span>out<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">// 其中over和out为两个函数</span></code></pre><ul><li>over:鼠标移到元素上要触发的函数（相当于mouseenter）</li><li>out:鼠标移出元素要触发的函数（相当于mouseleave）</li><li>如果只写一个函数，则鼠标经过和离开都会触发它</li></ul><p><strong>hover事件和停止动画排列案例</strong></p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"nav"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span><span class="token operator">></span>微博<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>            <span class="token operator">&lt;</span>ul<span class="token operator">></span><span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>私信<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>评论<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>@我<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span><span class="token operator">></span>微博<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>            <span class="token operator">&lt;</span>ul<span class="token operator">></span><span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>私信<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>评论<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>@我<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 鼠标经过</span>            <span class="token comment" spellcheck="true">// $(".nav>li").mouseover(function() {</span>            <span class="token comment" spellcheck="true">//     // $(this) jQuery 当前元素  this不要加引号</span>            <span class="token comment" spellcheck="true">//     // show() 显示元素  hide() 隐藏元素</span>            <span class="token comment" spellcheck="true">//     $(this).children("ul").slideDown(200);</span>            <span class="token comment" spellcheck="true">// });</span>            <span class="token comment" spellcheck="true">// // 鼠标离开</span>            <span class="token comment" spellcheck="true">// $(".nav>li").mouseout(function() {</span>            <span class="token comment" spellcheck="true">//     $(this).children("ul").slideUp(200);</span>            <span class="token comment" spellcheck="true">// });</span>            <span class="token comment" spellcheck="true">// 1. 事件切换 hover 就是鼠标经过和离开的复合写法</span>            <span class="token comment" spellcheck="true">// $(".nav>li").hover(function() {</span>            <span class="token comment" spellcheck="true">//     $(this).children("ul").slideDown(200);</span>            <span class="token comment" spellcheck="true">// }, function() {</span>            <span class="token comment" spellcheck="true">//     $(this).children("ul").slideUp(200);</span>            <span class="token comment" spellcheck="true">// });</span>            <span class="token comment" spellcheck="true">// 2. 事件切换 hover  如果只写一个函数，那么鼠标经过和鼠标离开都会触发这个函数</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".nav>li"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// stop 方法必须写到动画的前面</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideToggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h3 id="1-5-7-案例：王者荣耀手风琴效果"><a href="#1-5-7-案例：王者荣耀手风琴效果" class="headerlink" title="1.5.7. 案例：王者荣耀手风琴效果"></a>1.5.7. 案例：王者荣耀手风琴效果</h3><blockquote><p>思路分析:<br>1.鼠标经过某个小li 有两步操作：<br>2.当前小li 宽度变为 224px， 同时里面的小图片淡出，大图片淡入<br>3.其余兄弟小li宽度变为69px， 小图片淡入， 大图片淡出</p></blockquote><p>​    代码实现略。(详情参考源代码)</p><h2 id="1-6-今日总结"><a href="#1-6-今日总结" class="headerlink" title="1.6. 今日总结"></a>1.6. 今日总结</h2><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200405231648779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzaDE1OTc0NQ==,size_16,color_FFFFFF,t_70" alt="\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-sjg2HkFc-1586099747808)(images/总结.png)\]"></p>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Chrome插件安装时程序包无效:CRX_HEADER_INVALID</title>
      <link href="/2020/04/05/jie-jue-chrome-cha-jian-an-zhuang-shi-cheng-xu-bao-wu-xiao-crx-header-invalid/"/>
      <url>/2020/04/05/jie-jue-chrome-cha-jian-an-zhuang-shi-cheng-xu-bao-wu-xiao-crx-header-invalid/</url>
      
        <content type="html"><![CDATA[<p>JSON Formatter 插件的安装出现错误<br>打开chorme的扩展程序（设置——&gt;更多工具——&gt;扩展程序）chrome://extensions<br>选择开发者模式</p><p>拖拽.crx至Chrome的扩展程序列表<br>安装失败</p><p>报错为：程序包无效:”CRX_HEADER_INVALID”</p><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20190328132949469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dzdDA3MTc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>选择加载已解压的扩展程序</p><p> <img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20190328133003600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dzdDA3MTc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20190328133011758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dzdDA3MTc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>成功安装的操作如下：</p><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20190328133017916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dzdDA3MTc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p> <img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20190328133022658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dzdDA3MTc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>成功安装<br><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200405170008858.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzaDE1OTc0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python安装教程</title>
      <link href="/2020/04/05/python-an-zhuang-jiao-cheng/"/>
      <url>/2020/04/05/python-an-zhuang-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>一、博主自言<br>        随着人工智能的快速发展，python语言越来越受大家的欢迎，博主前段时间先自学了一次，这次再次巩固，顺便分享给大家我遇到的坑。帮助大家学习的时候少走弯路。</p><pre><code>    希望会对大家有所帮助，欢迎留言提问。</code></pre><p>二、安装环境<br>       本套教程的安装环境是：win7 或者win10系统</p><pre><code>   Python版本：python3.7.   至于在linux的安装和python其他版本的安装都大同小异，大家可以参考。</code></pre><p>三、安装步骤<br>1．python3.7官网下载</p><ol><li>在python的官网下载python版本，需要下载对应版本（在计算机-属性中查看自己是32位操作系统还是64位操作系统），我是64位的，就下载64位对应的安装包了（如下图：Windows x86-64 executable installer）。</li></ol><p>官网下载地址如下：</p><p><a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener">https://www.python.org/downloads/windows/</a></p><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdn.net/20180607151252642?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1ODE0MDAz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><p>注意事项：</p><pre><code>网址要输入正确如果输入的是https://www.python.org那就得在页面里找downloads选项,最好还是直接输入详细的地址。python下载时也可以下载zip的版本（Windows x86-64 embeddable zip file），但是下载后有时发现会出现很多dll文件丢失情况，还需要去重新修复这些问题，会比较麻烦，所以还是建议下载Windowsx86-64 executable installer版本。</code></pre><p>2．python3.7安装教程<br>1）下载完成后双击执行下载的exe程序，进入安装界面。</p><pre><code>安装界面可以选择默认安装，也可以自定义安装，我比较喜欢自定义安装，默认安装路径都比较深，自定义安装自己定义个较浅的目录，后续容易找。</code></pre><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdn.net/20180607151322122?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1ODE0MDAz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><p>2）在选择路径安装时，可以把下方的“Add Python  3.6  toPATH”勾选上，这个就直接默认把用户变量添加上了，后续不用再添加</p><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdn.net/20180607151331491?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1ODE0MDAz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><p>3) 选择好后，继续下一步，全部默认选择即可，如有需要可变更，再下一步时直接更新安装存储的路径。</p><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdn.net/20180607151346960?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1ODE0MDAz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><p>4)继续下一步，则提示安装成功。在安装目录也可以看到如下图2的相关信息。同时在cmd中执行python-V（大写V哦）则可看到成功安装的版本。</p><pre><code>至此python已成功安装，可以使用了。</code></pre><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdn.net/20180607151357937?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1ODE0MDAz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><p>5)安装完成后示意图如下</p><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdn.net/2018060715140869?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1ODE0MDAz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"><br><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdn.net/20180607151415229?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1ODE0MDAz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><p>三、IDLE使用<br>安装完成之后，在我们的开始菜单，找到 Python IDLE，双击运行，就可以在我们的idle中，调试我们的python代码了。</p><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdn.net/20180607151422951?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1ODE0MDAz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><p>备注：</p><pre><code>    上面讲的都是Windows平台下的Python IDLE安装和调试的过程，通常Linux系统，如：Ubuntu、CentOS都已经默认随系统安装好python程序了，在linux类系统中，这个idle叫做Python解释器，它是从终端模拟器中，输入“python”这个命令启动的。Python编程的一切都从这个IDLE编辑器中开始，在之后入门后，可以选择更多自己喜欢的Python编辑器，如：Wing IDE专业级Python编辑器。</code></pre><p>四、注意事项总结<br>1：登陆<a href="http://www.python.org" target="_blank" rel="noopener">www.python.org</a> 网站下载。（我的电脑是windows系统 所以我下载的3.7版本是 Download Windows x86-64 executable installer）</p><p>2：下载完成后直接运行，自定义安装。（记住得勾选Add Python 3.7to PATH）</p><p>3：安装完成后再python目录输入 python -V测试</p><p>4：成功之后，在开始菜单中搜索IDLE。双击运行就行了（IDLE是下载python时附带的，他是python的集成开发环境）</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node项目 Error: Cannot find module &#39;mongoose&#39;</title>
      <link href="/2020/04/02/node-xiang-mu-error-cannot-find-module-mongoose/"/>
      <url>/2020/04/02/node-xiang-mu-error-cannot-find-module-mongoose/</url>
      
        <content type="html"><![CDATA[<p>这是因为你部署的项目没有添加mongoose，使用 在自己项目的根目录下：npm install mongoose –save</p>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs module </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDb windows环境安装，附百度云链接</title>
      <link href="/2020/04/02/mongodb-windows-huan-jing-an-zhuang-fu-bai-du-yun-lian-jie/"/>
      <url>/2020/04/02/mongodb-windows-huan-jing-an-zhuang-fu-bai-du-yun-lian-jie/</url>
      
        <content type="html"><![CDATA[<p>1、下载安装mongdb软件</p><p>百度云：<a href="https://pan.baidu.com/s/1c-um10DOoi9uq5eKLncwxA" target="_blank" rel="noopener">https://pan.baidu.com/s/1c-um10DOoi9uq5eKLncwxA</a></p><p>密码：04rv</p><p>2、安装</p><p>选择custom模式，自定义目录，比如D:\MongoDB，一路next直到结束</p><p>3、创建文件夹</p><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMyMDE4LmNuYmxvZ3MuY29tL2Jsb2cvMTAxOTE2MC8yMDE4MDYvMTAxOTE2MC0yMDE4MDYyMjE1NDk0ODI2Ni0yOTMwOTg2MjIucG5n?x-oss-process=image/format,png" alt="在这里插入图片描述"></p><p>data、etc[创建mongodb.conf]、logs[创建mongodb.log空日志文件]</p><p>mongodb.conf配置如下：</p><pre class=" language-cpp"><code class="language-cpp">dbpath<span class="token operator">=</span>D<span class="token operator">:</span>\MongoDB\data\db #数据库路径logpath<span class="token operator">=</span>D<span class="token operator">:</span>\MongoDB\logs\mongodb<span class="token punctuation">.</span>log #日志输出文件路径logappend<span class="token operator">=</span><span class="token boolean">true</span> #错误日志采用追加模式，配置这个选项后mongodb的日志会追加到现有的日志文件，而不是重新创建一个新文件journal<span class="token operator">=</span><span class="token boolean">true</span> #启用日志文件，默认启用</code></pre><p>4、启用配置</p><p>用DOS进入d:\mongodb\bin文件夹</p><p>使用命令mongod –config d:\mongodb\etc\mongodb.conf</p><p>不要关闭窗口，打开浏览器输入:<a href="http://localhost:27017访问">http://localhost:27017访问</a></p><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMyMDE4LmNuYmxvZ3MuY29tL2Jsb2cvMTAxOTE2MC8yMDE4MDYvMTAxOTE2MC0yMDE4MDYyMjE1NTM1ODkyNi0yMDE1MTE4Mzk2LnBuZw?x-oss-process=image/format,png" alt="在这里插入图片描述"></p><p>即成功</p><p>5、启用mongdb</p><p>用DOS进入d:\mongodb\bin文件夹</p><p>使用命令mongo<br><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMyMDE4LmNuYmxvZ3MuY29tL2Jsb2cvMTAxOTE2MC8yMDE4MDYvMTAxOTE2MC0yMDE4MDYyMjE1NTQzMTIyNi0xOTk1MjYxMjk3LnBuZw?x-oss-process=image/format,png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> MongoDb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cannot find module &#39;mime&#39;错误</title>
      <link href="/2020/04/02/cannot-find-module-mime-cuo-wu/"/>
      <url>/2020/04/02/cannot-find-module-mime-cuo-wu/</url>
      
        <content type="html"><![CDATA[<p>又是Cannot find module 未找到模块系列的错误<br>在js中引用然后用监听文档调用显示报错。<br><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200402110631241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzaDE1OTc0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>未找到当前模块就直接安装相应的模块，顺利解决<br><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200402110547915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzaDE1OTc0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>现在正常运行启动成功<br><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200402110617908.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzaDE1OTc0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs module </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>module.js:549 throw err; ^ Error: Cannot find module &#39;portfinder&#39; at Function.....以及类似问题</title>
      <link href="/2020/04/01/module-js-549-throw-err-error-cannot-find-module-portfinder-at-function-yi-ji-lei-si-wen-ti/"/>
      <url>/2020/04/01/module-js-549-throw-err-error-cannot-find-module-portfinder-at-function-yi-ji-lei-si-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>解决办法：vue框架，先删除node_modules整个文件夹，然后cnpm cache clean,然后cnpm install.</p><p>cnpm  cache clean时可能会提示</p><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdn.net/20180531083632949?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsZXNzaW5nRE4=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p><p>这时执行cnpm cache clean –force即可。</p>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs module </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ionic 安装插件报错：源文本中存在无法识别的标记</title>
      <link href="/2020/04/01/ionic-an-zhuang-cha-jian-bao-cuo-yuan-wen-ben-zhong-cun-zai-wu-fa-shi-bie-de-biao-ji/"/>
      <url>/2020/04/01/ionic-an-zhuang-cha-jian-bao-cuo-yuan-wen-ben-zhong-cun-zai-wu-fa-shi-bie-de-biao-ji/</url>
      
        <content type="html"><![CDATA[<p>当我在vs code执行cnpm install –sava @ionic-native/XXX  （XXX是插件名）的时候报错  内容如下<br>解决方法：</p><p><img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMyMDE4LmNuYmxvZ3MuY29tL2Jsb2cvMTAxMTE1Mi8yMDE4MDMvMTAxMTE1Mi0yMDE4MDMzMDEwNTMzNzIzMC05ODIxOTI3NDMucG5n?x-oss-process=image/format,png" alt="在这里插入图片描述"><br>使用cmd 执行该句可以。<br>切换方法代码<br>1.按Windows+R快捷键打开运行窗口。</p><p>2.输入regedit，按下回车键即可进入注册表编辑器。<br>HKEY_CLASSES_ROOT\Directory\Background\shell\cmd\command<br>找到此目录更改数据<br>cmd.exe /s /k pushd “%V”<br>C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoExit cd %V<br>两种cmd  和powershell的切换方式</p>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs 启动报错：cannot find module；gulp安装及使用流程</title>
      <link href="/2020/04/01/nodejs-qi-dong-bao-cuo-cannot-find-module-gulp-an-zhuang-ji-shi-yong-liu-cheng/"/>
      <url>/2020/04/01/nodejs-qi-dong-bao-cuo-cannot-find-module-gulp-an-zhuang-ji-shi-yong-liu-cheng/</url>
      
        <content type="html"><![CDATA[<p>nodejs 启动报错：cannot find module 刚刚出现了这个错误。纠结了实在太久<br>直接把缺失的模块安装 但是还是提示同意的错误。<br>一气之下我把整个gulp重新安装了一遍。现在正常运行<br>下面整理一下 gulp 安装步骤~</p><ol><li>安装nodejs<br>去 <a href="https://nodejs.org/en/下载安装文件安装即可。" target="_blank" rel="noopener">https://nodejs.org/en/下载安装文件安装即可。</a></li></ol><p>安装完成后，在终端输入node -v回车打印出nodejs的版本号，说明nodejs安装成功。</p><p>在终端输入npm -v<br>回车打印出npm的版本号，说明npm也安装成功(node安装包中已集成了npm,因此在安装nodejs的同时也安装了npm)。</p><ol start="2"><li>设置npm<br>由于<a href="https://www.npmjs.com在国内访问不稳定，因此建议使用国内镜向站点https://npm.taobao.org" target="_blank" rel="noopener">https://www.npmjs.com在国内访问不稳定，因此建议使用国内镜向站点https://npm.taobao.org</a><br>具体方法如下：</li></ol><p>通过config命令</p><p>npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p><p>命令行指定</p><p>npm –registry <a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a> info underscore</p><p>编辑 npmrc文件，在该文件中加入registry = <a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p><p>这个在windows下找到了npmrc。 mac下暂时还没找到。</p><ol start="3"><li>安装gulp(全局)<br>在终端输入npm install gulp -g</li></ol><p>安装完成后，同样输入gulp -v输出相应的版本号，则说明安装成功。</p><p>至此gulp安装完成</p><ol start="4"><li>配置项目<br>下面以一个简单案例来做演示：创一个gulp文件夹作为项目根目录，项目结构如下：!</li></ol><p>我们以常用的 gulp-uglify、gulp-concat、gulp-minify-css为例。<br>先是配置package.json文件，有三种方法：</p><p>可以用记事本之类的创建一个</p><p>用npm init建</p><p>也可以复制之前项目的创建好的package.json</p><p>我们用npm init 的方法来创建package.json<br>在终端将当前目录切换至项目所在目录，然后输入npm init，一路回车，最终在项目根目录下生成package.json:</p><p>{<br>  “name”: “gulp_test”, /<em>项目名,切记这里命名不要与模块一样，如命名为gulp，要地安装gulp时就会出错</em>/<br>  “version”: “1.0.0”, /<em>版本号</em>/<br>  “description”: “”, /<em>描述</em>/<br>  “main”: “index.js”,<br>  “scripts”: {<br>    “test”: “echo &quot;Error: no test specified&quot; &amp;&amp; exit 1”<br>  },<br>  “author”: “”, /<em>作者</em>/<br>  “license”: “ISC” /<em>项目许可协议</em>/<br>}<br>注释是我自己加的，npm init生成是没有注释的，而且json文件也不支持注释，这点得注意！</p><ol start="5"><li>本地安装gulp及gulp插件<br>本地安装gulp<br>npm install gulp –save-dev<br>安装完成后，我们再看项目中的变化：<br>如图：</li></ol><p>gulp模块下载到项目中的node_modules文件夹中。</p><p>package.json中写入了devDependencies字段，并在该字段下填充了gulp模块名</p><p>–svae-dev 的作用就是将刚才安装的模块写入package.json中。</p><p>大家可能会觉得有些奇怪，刚不是安装了gulp吗？对，那是全局安装，为的是能在端终运行gulp任务的，这里是项目级别的安装，真正的gulp模块安装到项目的node_modules/下了，后面的插件都是依赖gulp模块的。</p><p>本地安装gulp插件<br>接下来安装上面提到的三个插件,在终端中输入<br>npm install –save-dev gulp-uglify gulp-concat gulp-minify-css<br>安装完成，如下图</p><ol start="6"><li>创建gulpfile.js文件<br>在项目根目录下创建gulpfile.js文件，然后编写如下代码，这些代码没什么好解释的，具体可以参考gulp的api</li></ol><p>/<em>引入gulp及相关插件 require(‘node_modules里对应模块’)</em>/<br>var gulp = require(‘gulp’);<br>var minifyCss = require(“gulp-minify-css”);<br>var uglify = require(‘gulp-uglify’);<br>var concat = require(‘gulp-concat’);<br>//压缩<br>gulp.task(‘minify-css’, function () {<br>    gulp.src(‘css/*.css’)<br>        .pipe(minifyCss())<br>        .pipe(gulp.dest(‘dist/css/‘));<br>});<br>//<br>gulp.task(‘script’, function () {<br>    gulp.src([‘src/a.js’,”src/b.js”])<br>        .pipe(concat(‘all.js’))<br>        .pipe(uglify())<br>        .pipe(gulp.dest(‘dist/js’));<br>});<br>gulp.task(‘default’,[‘minify-css’,’script’]);<br>实际的项目肯定没这么简单，想想我们一般不可能对某几个文件操作，应该是对一批文件操作，那样的涉及到文件匹配的问题了，暂时不展开了。</p><ol start="7"><li>运行gulp<br>可以看到，我们在gulpfile.js创建了3个任务，其实是两个，最后一个是合并上面两个任务。<br>然后我们就可以在终端来运行上面的作务了，在终端输入</li></ol><p>gulp minify-css<br>运行结果如下图：在dist/css/目录下生成了我们压缩后的css文件。</p><ol start="8"><li>用webStrom运行<br>到目前为至，大家基本知道gulp在项目中的运用了，只少基本流程是没问题了。但是，时刻使用终端还是不怎么方便的，下面我们直接在webStrom中运行上面的gulp任务。<br>在webStrom中打开gulpfile.js文件 》右键选择 Show Gulp Tasks 》Gulp面板上已经列出gulpfile.js创建的任务 》选中任务运行即可。<br>是不是非常方便!</li></ol>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs module </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在PowerShell中实现复制粘贴功能</title>
      <link href="/2020/03/31/zai-powershell-zhong-shi-xian-fu-zhi-nian-tie-gong-neng/"/>
      <url>/2020/03/31/zai-powershell-zhong-shi-xian-fu-zhi-nian-tie-gong-neng/</url>
      
        <content type="html"><![CDATA[<p>为了方便在windows下能够像Linux下一样方便的使用命令行进行操作，选取了命令行工具powershell。但是其复制粘贴功能无法使用……<br>下面给出解决思路：<br>1、从运行对话框或者开始菜单中搜索powershell，启动powershell<br>2、左键点击CMD处理程序左上角，选择属性。（或者按下Alt+空格）。<br>选中快速编辑模式，点击确定<br>如下图所示： <img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdn.net/20180902221313163?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIxMTI3MTUx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述">)<img src="https://gitee.com//yafine66/blogimage/raw/master/img/loading3.gif" data-original="https://img-blog.csdn.net/20180902220644657?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIxMTI3MTUx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> PowerShell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PowerShell复制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodemon : 无法加载文件 因为在此系统上禁止运行脚本。</title>
      <link href="/2020/03/31/nodemon-wu-fa-jia-zai-wen-jian-yin-wei-zai-ci-xi-tong-shang-jin-zhi-yun-xing-jiao-ben/"/>
      <url>/2020/03/31/nodemon-wu-fa-jia-zai-wen-jian-yin-wei-zai-ci-xi-tong-shang-jin-zhi-yun-xing-jiao-ben/</url>
      
        <content type="html"><![CDATA[<p>nodemon运行 提示错误：无法加载文件 C:\Users…\AppData\Roaming\npm\nodemon.ps1，因为在此系统上禁止运行脚本。</p><p>这是你机子禁止运行脚本，解决办法</p><p>1.管理员身份打开powerShell</p><p>2.输入set-ExecutionPolicy RemoteSigned</p><p>如果未成功，提示如下内容</p><pre class=" language-cpp"><code class="language-cpp">……内容省略……要更改当前用户的执行策略，请运行 <span class="token string">"Set-ExecutionPolicy -Scope CurrentUser"</span>。<span class="token comment" spellcheck="true">// 这实际上是管理员运行的意思</span>……内容省略……</code></pre><p>1<br>2<br>3<br>那么输入Set-ExecutionPolicy -Scope CurrentUser运行即可，之后输入RemoteSigned回车运行即可，再次执行nodemon，发现成功了</p><p>可以参看官网文档 <a href="https://docs.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7" target="_blank" rel="noopener">官网文档go</a></p>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodemon报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何解决nodemon运行报错问题</title>
      <link href="/2020/03/31/ru-he-jie-jue-nodemon-yun-xing-bao-cuo-wen-ti/"/>
      <url>/2020/03/31/ru-he-jie-jue-nodemon-yun-xing-bao-cuo-wen-ti/</url>
      
        <content type="html"><![CDATA[<p><code>nodemon可以用来监视node.js应用程序中的任何更改并自动重启服务，作为懒癌晚期的我在进行Node相关服务开发的过程中肯定是不愿意一遍又一遍的重启node服务然后进行代码调试的。今天自己电脑重装系统后在安装nodemon时遇到了这个问题，下面内容仅作为记录，以免后面忘记导致自己重复掉坑</code>。</p><p>错误截图</p><p>原因<br>nodemon没有被正确安装</p><p>解决方法<br>如果yarn global add nodemon –verbose安装没用的话，然后输入npm i nodemon -g –verbose使用NPM重新全局安装一次基本上就解决问题了，反之亦然。</p>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodemon报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更改windows 7 右键菜单的在此处打开命令行</title>
      <link href="/2020/03/31/geng-gai-windows-7-you-jian-cai-dan-de-zai-ci-chu-da-kai-ming-ling-xing/"/>
      <url>/2020/03/31/geng-gai-windows-7-you-jian-cai-dan-de-zai-ci-chu-da-kai-ming-ling-xing/</url>
      
        <content type="html"><![CDATA[<p>按照网上方法，大多数没错，但如果在D盘主目录下，例如d:\，则会提示</p><pre><code>以如下字符开头的字符串:所在位置 行:1 字符: 6+ cd D: &lt;&lt;&lt;&lt; &quot;缺少终止符: &quot;。所在位置 行:1 字符: 7+ cd D:&quot; &lt;&lt;&lt;&lt;    + CategoryInfo          : ParserError: (:String) [], ParentContainsErrorRecordException    + FullyQualifiedErrorId : TerminatorExpectedAtEndOfString</code></pre><p>本来嘛，也没啥的，也不会出错，就是看着不舒服，非要clear一下才可以，麻烦，在此贴出解决方法</p><p>某度结果 </p><ul><li>Ctrl + R 输入regedit进入注册表 </li><li>找到[HKEY_CLASSES_ROOT\Directory\Background\shell\cmd\command] </li><li>修改数据为C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoExit cd “%V”</li></ul><p>关键来了<br>第三步最后 “%V”，这个，在非根目录下是没问题的，但是在根目录下解析就有错，根据提示部分，修改为 “%V&quot;，完美解决问题</p><p>注意<br>今天出现了缺少终止符的问题，仔细研究了一下，发现去除””，即变为-NoExit cd %V，即可解决</p><p>参考资料<br>&lt;在此处打开命令窗口&gt;替换为PowerShell打开模式Windows开源小组_开源社区 ( <a href="https://www.thinksaas.cn/group/topic/481779/" target="_blank" rel="noopener">https://www.thinksaas.cn/group/topic/481779/</a> )</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 右键菜单栏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript 中 click 和onclick有什么区别呢</title>
      <link href="/2020/03/28/javascript-zhong-click-he-onclick-you-shi-me-qu-bie-ni/"/>
      <url>/2020/03/28/javascript-zhong-click-he-onclick-you-shi-me-qu-bie-ni/</url>
      
        <content type="html"><![CDATA[<pre><code>&lt;script type=&quot;text/javascript&quot;&gt;     $(function(){         $(&quot;#btn4&quot;).click(function(){             $(&quot;#btn3&quot;).click();         });     });     function change(){         alert(&quot;onclick&quot;);     } &lt;/script&gt;&lt;button id=&quot;btn3&quot; onclick=&quot;change()&quot;&gt;dd&lt;/button&gt; &lt;button id=&quot;btn4&quot;&gt;ee&lt;/button&gt;</code></pre><p>区别：<br>1.onclick是绑定事件，告诉浏览器在鼠标点击时候要做什么。<br> click本身是方法作用是触发onclick事件，只要执行了元素的click()方法，就会触发onclick事件。<br>如上诉代码所示，当点击’ee’按钮时,会触发’dd’的onclick事件(正常来说得按’dd’按钮才触发’dd’的onclick事件)，原因就是因为</p><p>(“#btn4”).click(function(){$(“#btn3”).click();<br>点击’ee’按钮时,代码内部调用了’dd’的click()方法，从而触发了’dd’的onclick事件。</p><p>2.click()方法的主要作用是触发调用click方法元素onclick事件。<br>此外，如果在click方法定义了如下代码<br>$(“#btn3”).click(function(){alert(“*****”);<br>click方法中的function代码会在onclick事件执行完后执行，此时click方法起到追加事件的作用。实例如下：</p><pre><code>    $(function(){         $(&quot;#btn3&quot;).click(function(){             alert(&quot;aa&quot;);         });     });     function change(){         alert(&quot;bb&quot;);     } </code></pre><p></script> </p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 绑定事件区别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习插件 和框架 内心激动</title>
      <link href="/2020/03/25/xue-xi-cha-jian-he-kuang-jia-nei-xin-ji-dong/"/>
      <url>/2020/03/25/xue-xi-cha-jian-he-kuang-jia-nei-xin-ji-dong/</url>
      
        <content type="html"><![CDATA[<h1 id="day03-Web-APIs"><a href="#day03-Web-APIs" class="headerlink" title="day03 - Web APIs"></a>day03 - Web APIs</h1><blockquote><p>学习目标：</p><p>能够使用removeChild()方法删除节点</p><p>能够完成动态生成表格案例</p><p>能够使用传统方式和监听方式给元素注册事件</p><p>能够说出事件流执行的三个阶段</p><p>能够在事件处理函数中获取事件对象</p><p>能够使用事件对象取消默认行为</p><p>能够使用事件对象阻止事件冒泡</p><p>能够使用事件对象获取鼠标的位置</p><p>能够完成跟随鼠标的天使案例</p></blockquote><h2 id="1-1-节点操作"><a href="#1-1-节点操作" class="headerlink" title="1.1. 节点操作"></a>1.1. 节点操作</h2><h3 id="1-1-1-删除节点"><a href="#1-1-1-删除节点" class="headerlink" title="1.1.1 删除节点"></a>1.1.1 删除节点</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-hM4JAl43-1584861766729)(images/1551163384254.png)]</p><p>node.removeChild() 方法从 node节点中删除一个子节点，返回删除的节点。</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>button<span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>熊大<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>熊二<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>光头强<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 1.获取元素</span>        <span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 2. 删除元素  node.removeChild(child)</span>        <span class="token comment" spellcheck="true">// ul.removeChild(ul.children[0]);</span>        <span class="token comment" spellcheck="true">// 3. 点击按钮依次删除里面的孩子</span>        btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ul<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                ul<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>ul<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-1-2-案例：删除留言"><a href="#1-1-2-案例：删除留言" class="headerlink" title="1.1.2 案例：删除留言"></a>1.1.2 案例：删除留言</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Ds91oun0-1584861766730)(images/1551163586475.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-3XQ94xGO-1584861766731)(images/1551163635501.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>textarea name<span class="token operator">=</span><span class="token string">""</span> id<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>textarea<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>发布<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 1. 获取元素</span>        <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> text <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'textarea'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 2. 注册事件</span>        btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>text<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'您没有输入内容'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// console.log(text.value);</span>                <span class="token comment" spellcheck="true">// (1) 创建元素</span>                <span class="token keyword">var</span> li <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 先有li 才能赋值</span>                li<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> text<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">"&lt;a href='javascript:;'>删除&lt;/a>"</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// (2) 添加元素</span>                <span class="token comment" spellcheck="true">// ul.appendChild(li);</span>                ul<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>li<span class="token punctuation">,</span> ul<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// (3) 删除元素 删除的是当前链接的li  它的父亲</span>                <span class="token keyword">var</span> <span class="token keyword">as</span> <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">as</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">as</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">// 删除的是 li 当前a所在的li  this.parentNode;</span>                        ul<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-1-3-复制（克隆）节点"><a href="#1-1-3-复制（克隆）节点" class="headerlink" title="1.1.3 复制（克隆）节点"></a>1.1.3 复制（克隆）节点</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-GQOCIT2Z-1584861766731)(images/1551163763825.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token number">1111</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 1. node.cloneNode(); 括号为空或者里面是false 浅拷贝 只复制标签不复制里面的内容</span>        <span class="token comment" spellcheck="true">// 2. node.cloneNode(true); 括号为true 深拷贝 复制标签复制里面的内容</span>        <span class="token keyword">var</span> lili <span class="token operator">=</span> ul<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ul<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>lili<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-1-4-案例：动态生成表格"><a href="#1-1-4-案例：动态生成表格" class="headerlink" title="1.1.4 案例：动态生成表格"></a>1.1.4 案例：动态生成表格</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-BMQub2CM-1584861766731)(images/1551163900675.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-KlAXI7UW-1584861766732)(images/1551163924396.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 1.先去准备好学生的数据</span>        <span class="token keyword">var</span> datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'魏璎珞'</span><span class="token punctuation">,</span>            subject<span class="token punctuation">:</span> <span class="token string">'JavaScript'</span><span class="token punctuation">,</span>            score<span class="token punctuation">:</span> <span class="token number">100</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'弘历'</span><span class="token punctuation">,</span>            subject<span class="token punctuation">:</span> <span class="token string">'JavaScript'</span><span class="token punctuation">,</span>            score<span class="token punctuation">:</span> <span class="token number">98</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'傅恒'</span><span class="token punctuation">,</span>            subject<span class="token punctuation">:</span> <span class="token string">'JavaScript'</span><span class="token punctuation">,</span>            score<span class="token punctuation">:</span> <span class="token number">99</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'明玉'</span><span class="token punctuation">,</span>            subject<span class="token punctuation">:</span> <span class="token string">'JavaScript'</span><span class="token punctuation">,</span>            score<span class="token punctuation">:</span> <span class="token number">88</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'大猪蹄子'</span><span class="token punctuation">,</span>            subject<span class="token punctuation">:</span> <span class="token string">'JavaScript'</span><span class="token punctuation">,</span>            score<span class="token punctuation">:</span> <span class="token number">0</span>        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 2. 往tbody 里面创建行： 有几个人（通过数组的长度）我们就创建几行</span>        <span class="token keyword">var</span> tbody <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'tbody'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 遍历数组</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> datas<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token comment" spellcheck="true">// 1. 创建 tr行</span>            <span class="token keyword">var</span> tr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'tr'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            tbody<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>tr<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 2. 行里面创建单元格td 单元格的数量取决于每个对象里面的属性个数  </span>            <span class="token comment" spellcheck="true">// 使用for in遍历学生对象</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span> datas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                 <span class="token comment" spellcheck="true">// 创建单元格 </span>                <span class="token keyword">var</span> td <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'td'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 把对象里面的属性值 datas[i][k] 给 td  </span>                td<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> datas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>                tr<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>td<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 3. 创建有删除2个字的单元格 </span>            <span class="token keyword">var</span> td <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'td'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            td<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'&lt;a href="javascript:;">删除 &lt;/a>'</span><span class="token punctuation">;</span>            tr<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>td<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 4. 删除操作 开始 </span>        <span class="token keyword">var</span> <span class="token keyword">as</span> <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">as</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">as</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 点击a 删除 当前a 所在的行(链接的爸爸的爸爸)  node.removeChild(child)  </span>                tbody<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-1-5-创建元素的三种方式"><a href="#1-1-5-创建元素的三种方式" class="headerlink" title="1.1.5 创建元素的三种方式"></a>1.1.5 创建元素的三种方式</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-sdQNm0g8-1584861766732)(images/1551164214925.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 三种创建元素方式区别 </span>        <span class="token comment" spellcheck="true">// 1. document.write() 创建元素  如果页面文档流加载完毕，再调用这句话会导致页面重绘</span>         <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;div>123&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 2. innerHTML 创建元素</span>        <span class="token keyword">var</span> inner <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.inner'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             inner<span class="token punctuation">.</span>innerHTML <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;a href="#">百度&lt;/a>'</span>         <span class="token punctuation">}</span>        <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'&lt;a href="#">百度&lt;/a>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        inner<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 3. document.createElement() 创建元素</span>        <span class="token keyword">var</span> create <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.create'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            create<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-1-6-innerTHML和createElement效率对比"><a href="#1-1-6-innerTHML和createElement效率对比" class="headerlink" title="1.1.6 innerTHML和createElement效率对比"></a>1.1.6 innerTHML和createElement效率对比</h3><p><strong>innerHTML字符串拼接方式（效率低）</strong></p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> d1 <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;div style="width:100px; height:2px; border:1px solid blue;">&lt;/div>'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> d2 <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d2 <span class="token operator">-</span> d1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><strong>createElement方式（效率一般）</strong></p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> d1 <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token string">'100px'</span><span class="token punctuation">;</span>            div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'2px'</span><span class="token punctuation">;</span>            div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>border <span class="token operator">=</span> <span class="token string">'1px solid red'</span><span class="token punctuation">;</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> d2 <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d2 <span class="token operator">-</span> d1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><strong>innerHTML数组方式（效率高）</strong></p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> d1 <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'&lt;div style="width:100px; height:2px; border:1px solid blue;">&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> d2 <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d2 <span class="token operator">-</span> d1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h2 id="1-2-DOM的核心总结"><a href="#1-2-DOM的核心总结" class="headerlink" title="1.2. DOM的核心总结"></a>1.2. DOM的核心总结</h2><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-fy5Jxn7I-1584861766733)(images/1551164669434.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-POlOMivm-1584861766733)(images/1551164715018.png)]</p><p>关于dom操作，我们主要针对于元素的操作。主要有创建、增、删、改、查、属性操作、事件操作。</p><h3 id="1-2-1-创建"><a href="#1-2-1-创建" class="headerlink" title="1.2.1. 创建"></a>1.2.1. 创建</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-8yvij6hu-1584861766734)(images/1551164797164.png)]</p><h3 id="1-2-2-增加"><a href="#1-2-2-增加" class="headerlink" title="1.2.2. 增加"></a>1.2.2. 增加</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-3pj8alDm-1584861766735)(images/1551164829832.png)]</p><h3 id="1-2-3-删"><a href="#1-2-3-删" class="headerlink" title="1.2.3. 删"></a>1.2.3. 删</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-IZ8vtoJd-1584861766735)(images/1551164872533.png)]</p><h3 id="1-2-4-改"><a href="#1-2-4-改" class="headerlink" title="1.2.4. 改"></a>1.2.4. 改</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ro9uXFmN-1584861766735)(images/1551164907830.png)]</p><h3 id="1-2-5-查"><a href="#1-2-5-查" class="headerlink" title="1.2.5. 查"></a>1.2.5. 查</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-OMsZyj0N-1584861766735)(images/1551164936214.png)]</p><h3 id="1-2-6-属性操作"><a href="#1-2-6-属性操作" class="headerlink" title="1.2.6. 属性操作"></a>1.2.6. 属性操作</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-aN4fsfZ2-1584861766736)(images/1551164985383.png)]</p><h3 id="1-2-7-事件操作（重点）"><a href="#1-2-7-事件操作（重点）" class="headerlink" title="1.2.7. 事件操作（重点）"></a>1.2.7. 事件操作（重点）</h3><h2 id="1-3-事件高级"><a href="#1-3-事件高级" class="headerlink" title="1.3. 事件高级"></a>1.3. 事件高级</h2><h3 id="1-3-1-注册事件（2种方式）"><a href="#1-3-1-注册事件（2种方式）" class="headerlink" title="1.3.1. 注册事件（2种方式）"></a>1.3.1. 注册事件（2种方式）</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-bdViiMQw-1584861766736)(images/1551165252019.png)]</p><h3 id="1-3-2-事件监听"><a href="#1-3-2-事件监听" class="headerlink" title="1.3.2 事件监听"></a>1.3.2 事件监听</h3><h4 id="addEventListener-事件监听（IE9以后支持）"><a href="#addEventListener-事件监听（IE9以后支持）" class="headerlink" title="addEventListener()事件监听（IE9以后支持）"></a>addEventListener()事件监听（IE9以后支持）</h4><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-gmVtWlii-1584861766737)(images/1551165364122.png)]</p><p>eventTarget.addEventListener()方法将指定的监听器注册到 eventTarget（目标对象）上，当该对象触发指定的事件时，就会执行事件处理函数。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-bSZKVMzc-1584861766737)(images/1551165604792.png)]</p><h4 id="attacheEvent-事件监听（IE678支持）"><a href="#attacheEvent-事件监听（IE678支持）" class="headerlink" title="attacheEvent()事件监听（IE678支持）"></a>attacheEvent()事件监听（IE678支持）</h4><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-31Lsf1if-1584861766738)(images/1551165781836.png)]</p><p>​    eventTarget.attachEvent()方法将指定的监听器注册到 eventTarget（目标对象） 上，当该对象触发指定的事件时，指定的回调函数就会被执行。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-vIwH7HMB-1584861766738)(images/1551165843912.png)]</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>button<span class="token operator">></span>传统注册事件<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span>button<span class="token operator">></span>方法监听注册事件<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span>button<span class="token operator">></span>ie9 attachEvent<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">var</span> btns <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 1. 传统方式注册事件</span>    btns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'hi'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    btns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'hao a u'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">// 2. 事件侦听注册事件 addEventListener </span>   <span class="token comment" spellcheck="true">// (1) 里面的事件类型是字符串 必定加引号 而且不带on</span>   <span class="token comment" spellcheck="true">// (2) 同一个元素 同一个事件可以添加多个侦听器（事件处理程序）</span>    btns<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    btns<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 3. attachEvent ie9以前的版本支持</span>    btns<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">'onclick'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h4 id="事件监听兼容性解决方案"><a href="#事件监听兼容性解决方案" class="headerlink" title="事件监听兼容性解决方案"></a>事件监听兼容性解决方案</h4><p>封装一个函数，函数中判断浏览器的类型：</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-VcT3wZ48-1584861766738)(images/1551166023885.png)]</p><h3 id="1-3-3-删除事件（解绑事件）"><a href="#1-3-3-删除事件（解绑事件）" class="headerlink" title="1.3.3. 删除事件（解绑事件）"></a>1.3.3. 删除事件（解绑事件）</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-4ZNlMtty-1584861766738)(images/1551166185410.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> divs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        divs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 1. 传统方式删除事件</span>            divs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 2. removeEventListener 删除事件</span>        divs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 里面的fn 不需要调用加小括号</span>        <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            divs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 3. detachEvent</span>        divs<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">'onclick'</span><span class="token punctuation">,</span> fn1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            divs<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">detachEvent</span><span class="token punctuation">(</span><span class="token string">'onclick'</span><span class="token punctuation">,</span> fn1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>*<em>删除事件兼容性解决方案 *</em></p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-jcovxFE8-1584861766739)(images/1551166332453.png)]</p><h3 id="1-3-4-DOM事件流"><a href="#1-3-4-DOM事件流" class="headerlink" title="1.3.4. DOM事件流"></a>1.3.4. DOM事件流</h3><blockquote><pre><code>html中的标签都是相互嵌套的，我们可以将元素想象成一个盒子装一个盒子，document是最外面的大盒子。当你单击一个div时，同时你也单击了div的父元素，甚至整个页面。那么是先执行父元素的单击事件，还是先执行div的单击事件 ？？？</code></pre></blockquote><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Zkfdk8c5-1584861766739)(images/1551166423144.png)]</p><blockquote><p>比如：我们给页面中的一个div注册了单击事件，当你单击了div时，也就单击了body，单击了html，单击了document。</p></blockquote><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ak4hOduj-1584861766740)(images/1551166555833.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-8t2nUe5o-1584861766740)(images/1551166581552.png)]</p><blockquote><pre><code>当时的2大浏览器霸主谁也不服谁！IE 提出从目标元素开始，然后一层一层向外接收事件并响应，也就是冒泡型事件流。Netscape（网景公司）提出从最外层开始，然后一层一层向内接收事件并响应，也就是捕获型事件流。江湖纷争，武林盟主也脑壳疼！！！最终，w3c 采用折中的方式，平息了战火，制定了统一的标准 —--— 先捕获再冒泡。现代浏览器都遵循了此标准，所以当事件发生时，会经历3个阶段。</code></pre></blockquote><p>DOM 事件流会经历3个阶段： </p><ol><li><p>捕获阶段</p></li><li><p>当前目标阶段</p></li><li><p>冒泡阶段 </p></li></ol><p>​    我们向水里面扔一块石头，首先它会有一个下降的过程，这个过程就可以理解为从最顶层向事件发生的最具体元素（目标点）的捕获过程；之后会产生泡泡，会在最低点（ 最具体元素）之后漂浮到水面上，这个过程相当于事件冒泡。 </p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-I7ITOclH-1584861766741)(images/1551169007768.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-GYhlJ4dR-1584861766741)(images/1551169042295.png)]</p><p><strong>事件冒泡</strong></p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"father"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"son"</span><span class="token operator">></span>son盒子<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// onclick 和 attachEvent（ie） 在冒泡阶段触发</span>        <span class="token comment" spellcheck="true">// 冒泡阶段 如果addEventListener 第三个参数是 false 或者 省略 </span>        <span class="token comment" spellcheck="true">// son -> father ->body -> html -> document</span>        <span class="token keyword">var</span> son <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.son'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给son注册单击事件</span>        son<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'son'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给father注册单击事件</span>        <span class="token keyword">var</span> father <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        father<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给document注册单击事件，省略第3个参数</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'document'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><strong>事件捕获</strong></p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"father"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"son"</span><span class="token operator">></span>son盒子<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 如果addEventListener() 第三个参数是 true 那么在捕获阶段触发</span>        <span class="token comment" spellcheck="true">// document -> html -> body -> father -> son</span>         <span class="token keyword">var</span> son <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.son'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给son注册单击事件，第3个参数为true</span>         son<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'son'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> father <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给father注册单击事件，第3个参数为true</span>         father<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给document注册单击事件，第3个参数为true</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'document'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-3-5-事件对象"><a href="#1-3-5-事件对象" class="headerlink" title="1.3.5. 事件对象"></a>1.3.5. 事件对象</h3><h4 id="什么是事件对象"><a href="#什么是事件对象" class="headerlink" title="什么是事件对象"></a>什么是事件对象</h4><p>事件发生后，跟事件相关的一系列信息数据的集合都放到这个对象里面，这个对象就是事件对象。</p><p>比如：  </p><ol><li><p>谁绑定了这个事件。</p></li><li><p>鼠标触发事件的话，会得到鼠标的相关信息，如鼠标位置。</p></li><li><p>键盘触发事件的话，会得到键盘的相关信息，如按了哪个键。</p></li></ol><h4 id="事件对象的使用"><a href="#事件对象的使用" class="headerlink" title="事件对象的使用"></a>事件对象的使用</h4><p>事件触发发生时就会产生事件对象，并且系统会以实参的形式传给事件处理函数。</p><p>所以，在事件处理函数中声明1个形参用来接收事件对象。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-1Xea5Tma-1584861766742)(images/1551169537789.png)]</p><h4 id="事件对象的兼容性处理"><a href="#事件对象的兼容性处理" class="headerlink" title="事件对象的兼容性处理"></a>事件对象的兼容性处理</h4><p>事件对象本身的获取存在兼容问题：</p><ol><li><p>标准浏览器中是浏览器给方法传递的参数，只需要定义形参 e 就可以获取到。</p></li><li><p>在 IE6~8 中，浏览器不会给方法传递参数，如果需要的话，需要到 window.event 中获取查找。</p></li></ol><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-BytKxThL-1584861766742)(images/1551169680823.png)]</p><pre><code>只要“||”前面为false, 不管“||”后面是true 还是 false，都返回 “||” 后面的值。只要“||”前面为true, 不管“||”后面是true 还是 false，都返回 “||” 前面的值。</code></pre><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">123</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        div<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 事件对象</span>                e <span class="token operator">=</span> e <span class="token operator">||</span> window<span class="token punctuation">.</span>event<span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h4 id="事件对象的属性和方法"><a href="#事件对象的属性和方法" class="headerlink" title="事件对象的属性和方法"></a>事件对象的属性和方法</h4><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-cxFwLZHI-1584861766743)(images/1551169931778.png)]</p><h4 id="e-target-和-this-的区别"><a href="#e-target-和-this-的区别" class="headerlink" title="e.target 和 this 的区别"></a>e.target 和 this 的区别</h4><ul><li><p>this 是事件绑定的元素（绑定这个事件处理函数的元素） 。</p></li><li><p>e.target 是事件触发的元素。</p></li></ul><blockquote><pre><code>常情况下terget 和 this是一致的，但有一种情况不同，那就是在事件冒泡时（父子元素有相同事件，单击子元素，父元素的事件处理函数也会被触发执行），    这时候this指向的是父元素，因为它是绑定事件的元素对象，    而target指向的是子元素，因为他是触发事件的那个具体元素对象。</code></pre></blockquote><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">123</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        div<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// e.target 和 this指向的都是div</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>事件冒泡下的e.target和this</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>abc<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>abc<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>abc<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ul<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token comment" spellcheck="true">// 我们给ul 绑定了事件  那么this 就指向ul  </span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ul</span>              <span class="token comment" spellcheck="true">// e.target 触发了事件的对象 我们点击的是li e.target 指向的就是li</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// li</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-3-6-阻止默认行为"><a href="#1-3-6-阻止默认行为" class="headerlink" title="1.3.6 阻止默认行为"></a>1.3.6 阻止默认行为</h3><blockquote><p>html中一些标签有默认行为，例如a标签被单击后，默认会进行页面跳转。</p></blockquote><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://www.baidu.com"</span><span class="token operator">></span>百度<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 2. 阻止默认行为 让链接不跳转 </span>        <span class="token keyword">var</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>             e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//  dom 标准写法</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 3. 传统的注册方式</span>        a<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 普通浏览器 e.preventDefault();  方法</span>            e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 低版本浏览器 ie678  returnValue  属性</span>            e<span class="token punctuation">.</span>returnValue <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 我们可以利用return false 也能阻止默认行为 没有兼容性问题</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-3-7-阻止事件冒泡"><a href="#1-3-7-阻止事件冒泡" class="headerlink" title="1.3.7 阻止事件冒泡"></a>1.3.7 阻止事件冒泡</h3><p>事件冒泡本身的特性，会带来的坏处，也会带来的好处。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-alftzO30-1584861766743)(images/1551171467194.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"father"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"son"</span><span class="token operator">></span>son儿子<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> son <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.son'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给son注册单击事件</span>        son<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'son'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// stop 停止  Propagation 传播</span>            window<span class="token punctuation">.</span>event<span class="token punctuation">.</span>cancelBubble <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 非标准 cancel 取消 bubble 泡泡</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> father <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给father注册单击事件</span>        father<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给document注册单击事件</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'document'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><strong>阻止事件冒泡的兼容性处理</strong></p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-wIO8Ljfz-1584861766743)(images/1551171657513.png)]</p><h3 id="1-3-8-事件委托"><a href="#1-3-8-事件委托" class="headerlink" title="1.3.8 事件委托"></a>1.3.8 事件委托</h3><p>事件冒泡本身的特性，会带来的坏处，也会带来的好处。</p><h4 id="什么是事件委托"><a href="#什么是事件委托" class="headerlink" title="什么是事件委托"></a>什么是事件委托</h4><pre><code>把事情委托给别人，代为处理。</code></pre><p>事件委托也称为事件代理，在 jQuery 里面称为事件委派。</p><blockquote><p>说白了就是，不给子元素注册事件，给父元素注册事件，把处理代码在父元素的事件中执行。</p></blockquote><p><strong>生活中的代理：</strong></p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-zvD6r1lf-1584861766743)(images/1551172082624.png)]</p><p><strong>js事件中的代理：</strong></p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-sM8TSNku-1584861766744)(images/1551172159273.png)]</p><h4 id="事件委托的原理"><a href="#事件委托的原理" class="headerlink" title="事件委托的原理"></a>事件委托的原理</h4><p>​    给父元素注册事件，利用事件冒泡，当子元素的事件触发，会冒泡到父元素，然后去控制相应的子元素。</p><h4 id="事件委托的作用"><a href="#事件委托的作用" class="headerlink" title="事件委托的作用"></a>事件委托的作用</h4><ul><li><p>我们只操作了一次 DOM ，提高了程序的性能。</p></li><li><p>动态新创建的子元素，也拥有事件。</p></li></ul><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>知否知否，点我应有弹框在手！<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>知否知否，点我应有弹框在手！<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>知否知否，点我应有弹框在手！<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>知否知否，点我应有弹框在手！<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>知否知否，点我应有弹框在手！<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 事件委托的核心原理：给父节点添加侦听器， 利用事件冒泡影响每一个子节点</span>        <span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ul<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// e.target 这个可以得到我们点击的对象</span>            e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'pink'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h2 id="1-4-常用鼠标事件"><a href="#1-4-常用鼠标事件" class="headerlink" title="1.4. 常用鼠标事件"></a>1.4. 常用鼠标事件</h2><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-8EdtwqtV-1584861766744)(images/1551172699854.png)]</p><h3 id="1-4-1-案例：禁止选中文字和禁止右键菜单"><a href="#1-4-1-案例：禁止选中文字和禁止右键菜单" class="headerlink" title="1.4.1 案例：禁止选中文字和禁止右键菜单"></a>1.4.1 案例：禁止选中文字和禁止右键菜单</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-rrAUUTBa-1584861766744)(images/1551172755484.png)]</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>body<span class="token operator">></span>    我是一段不愿意分享的文字    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 1. contextmenu 我们可以禁用右键菜单</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'contextmenu'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 2. 禁止选中文字 selectstart</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'selectstart'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h3 id="1-4-2-鼠标事件对象"><a href="#1-4-2-鼠标事件对象" class="headerlink" title="1.4.2 鼠标事件对象"></a>1.4.2 鼠标事件对象</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-VQVy3do7-1584861766745)(images/1551173103741.png)]</p><h3 id="1-4-3-获取鼠标在页面的坐标"><a href="#1-4-3-获取鼠标在页面的坐标" class="headerlink" title="1.4.3 获取鼠标在页面的坐标"></a>1.4.3 获取鼠标在页面的坐标</h3><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 鼠标事件对象 MouseEvent</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 1. client 鼠标在可视区的x和y坐标</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientX<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientY<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'---------------------'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 2. page 鼠标在页面文档的x和y坐标</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageX<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageY<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'---------------------'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 3. screen 鼠标在电脑屏幕的x和y坐标</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>screenX<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>screenY<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-4-4-案例：跟随鼠标的天使"><a href="#1-4-4-案例：跟随鼠标的天使" class="headerlink" title="1.4.4 案例：跟随鼠标的天使"></a>1.4.4 案例：跟随鼠标的天使</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-8GI3u8Id-1584861766745)(images/1551173172613.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-u2Zs5C0R-1584861766746)(images/1551173186812.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"images/angel.gif"</span> alt<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> pic <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 1. mousemove只要我们鼠标移动1px 就会触发这个事件</span>            <span class="token comment" spellcheck="true">// 2.核心原理： 每次鼠标移动，我们都会获得最新的鼠标坐标， </span>            <span class="token comment" spellcheck="true">// 把这个x和y坐标做为图片的top和left 值就可以移动图片</span>            <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX<span class="token punctuation">;</span>            <span class="token keyword">var</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY<span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'x坐标是'</span> <span class="token operator">+</span> x<span class="token punctuation">,</span> <span class="token string">'y坐标是'</span> <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//3 . 千万不要忘记给left 和top 添加px 单位</span>            pic<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> x <span class="token operator">-</span> <span class="token number">50</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>            pic<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> y <span class="token operator">-</span> <span class="token number">40</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web学习第三天</title>
      <link href="/2020/03/22/web-xue-xi-di-san-tian/"/>
      <url>/2020/03/22/web-xue-xi-di-san-tian/</url>
      
        <content type="html"><![CDATA[<h1 id="day03-Web-APIs"><a href="#day03-Web-APIs" class="headerlink" title="day03 - Web APIs"></a>day03 - Web APIs</h1><blockquote><p>学习目标：</p><p>能够使用removeChild()方法删除节点</p><p>能够完成动态生成表格案例</p><p>能够使用传统方式和监听方式给元素注册事件</p><p>能够说出事件流执行的三个阶段</p><p>能够在事件处理函数中获取事件对象</p><p>能够使用事件对象取消默认行为</p><p>能够使用事件对象阻止事件冒泡</p><p>能够使用事件对象获取鼠标的位置</p><p>能够完成跟随鼠标的天使案例</p></blockquote><h2 id="1-1-节点操作"><a href="#1-1-节点操作" class="headerlink" title="1.1. 节点操作"></a>1.1. 节点操作</h2><h3 id="1-1-1-删除节点"><a href="#1-1-1-删除节点" class="headerlink" title="1.1.1 删除节点"></a>1.1.1 删除节点</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-hM4JAl43-1584861766729)(images/1551163384254.png)]</p><p>node.removeChild() 方法从 node节点中删除一个子节点，返回删除的节点。</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>button<span class="token operator">></span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>熊大<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>熊二<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>光头强<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 1.获取元素</span>        <span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 2. 删除元素  node.removeChild(child)</span>        <span class="token comment" spellcheck="true">// ul.removeChild(ul.children[0]);</span>        <span class="token comment" spellcheck="true">// 3. 点击按钮依次删除里面的孩子</span>        btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ul<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                ul<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>ul<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-1-2-案例：删除留言"><a href="#1-1-2-案例：删除留言" class="headerlink" title="1.1.2 案例：删除留言"></a>1.1.2 案例：删除留言</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Ds91oun0-1584861766730)(images/1551163586475.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-3XQ94xGO-1584861766731)(images/1551163635501.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>textarea name<span class="token operator">=</span><span class="token string">""</span> id<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>textarea<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>发布<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 1. 获取元素</span>        <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> text <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'textarea'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 2. 注册事件</span>        btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>text<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'您没有输入内容'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// console.log(text.value);</span>                <span class="token comment" spellcheck="true">// (1) 创建元素</span>                <span class="token keyword">var</span> li <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 先有li 才能赋值</span>                li<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> text<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">"&lt;a href='javascript:;'>删除&lt;/a>"</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// (2) 添加元素</span>                <span class="token comment" spellcheck="true">// ul.appendChild(li);</span>                ul<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>li<span class="token punctuation">,</span> ul<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// (3) 删除元素 删除的是当前链接的li  它的父亲</span>                <span class="token keyword">var</span> <span class="token keyword">as</span> <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">as</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">as</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">// 删除的是 li 当前a所在的li  this.parentNode;</span>                        ul<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-1-3-复制（克隆）节点"><a href="#1-1-3-复制（克隆）节点" class="headerlink" title="1.1.3 复制（克隆）节点"></a>1.1.3 复制（克隆）节点</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-GQOCIT2Z-1584861766731)(images/1551163763825.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token number">1111</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 1. node.cloneNode(); 括号为空或者里面是false 浅拷贝 只复制标签不复制里面的内容</span>        <span class="token comment" spellcheck="true">// 2. node.cloneNode(true); 括号为true 深拷贝 复制标签复制里面的内容</span>        <span class="token keyword">var</span> lili <span class="token operator">=</span> ul<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ul<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>lili<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-1-4-案例：动态生成表格"><a href="#1-1-4-案例：动态生成表格" class="headerlink" title="1.1.4 案例：动态生成表格"></a>1.1.4 案例：动态生成表格</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-BMQub2CM-1584861766731)(images/1551163900675.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-KlAXI7UW-1584861766732)(images/1551163924396.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 1.先去准备好学生的数据</span>        <span class="token keyword">var</span> datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'魏璎珞'</span><span class="token punctuation">,</span>            subject<span class="token punctuation">:</span> <span class="token string">'JavaScript'</span><span class="token punctuation">,</span>            score<span class="token punctuation">:</span> <span class="token number">100</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'弘历'</span><span class="token punctuation">,</span>            subject<span class="token punctuation">:</span> <span class="token string">'JavaScript'</span><span class="token punctuation">,</span>            score<span class="token punctuation">:</span> <span class="token number">98</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'傅恒'</span><span class="token punctuation">,</span>            subject<span class="token punctuation">:</span> <span class="token string">'JavaScript'</span><span class="token punctuation">,</span>            score<span class="token punctuation">:</span> <span class="token number">99</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'明玉'</span><span class="token punctuation">,</span>            subject<span class="token punctuation">:</span> <span class="token string">'JavaScript'</span><span class="token punctuation">,</span>            score<span class="token punctuation">:</span> <span class="token number">88</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            name<span class="token punctuation">:</span> <span class="token string">'大猪蹄子'</span><span class="token punctuation">,</span>            subject<span class="token punctuation">:</span> <span class="token string">'JavaScript'</span><span class="token punctuation">,</span>            score<span class="token punctuation">:</span> <span class="token number">0</span>        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 2. 往tbody 里面创建行： 有几个人（通过数组的长度）我们就创建几行</span>        <span class="token keyword">var</span> tbody <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'tbody'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 遍历数组</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> datas<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token comment" spellcheck="true">// 1. 创建 tr行</span>            <span class="token keyword">var</span> tr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'tr'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            tbody<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>tr<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 2. 行里面创建单元格td 单元格的数量取决于每个对象里面的属性个数  </span>            <span class="token comment" spellcheck="true">// 使用for in遍历学生对象</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span> datas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                 <span class="token comment" spellcheck="true">// 创建单元格 </span>                <span class="token keyword">var</span> td <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'td'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 把对象里面的属性值 datas[i][k] 给 td  </span>                td<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> datas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>                tr<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>td<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 3. 创建有删除2个字的单元格 </span>            <span class="token keyword">var</span> td <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'td'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            td<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'&lt;a href="javascript:;">删除 &lt;/a>'</span><span class="token punctuation">;</span>            tr<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>td<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 4. 删除操作 开始 </span>        <span class="token keyword">var</span> <span class="token keyword">as</span> <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">as</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">as</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 点击a 删除 当前a 所在的行(链接的爸爸的爸爸)  node.removeChild(child)  </span>                tbody<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-1-5-创建元素的三种方式"><a href="#1-1-5-创建元素的三种方式" class="headerlink" title="1.1.5 创建元素的三种方式"></a>1.1.5 创建元素的三种方式</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-sdQNm0g8-1584861766732)(images/1551164214925.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 三种创建元素方式区别 </span>        <span class="token comment" spellcheck="true">// 1. document.write() 创建元素  如果页面文档流加载完毕，再调用这句话会导致页面重绘</span>         <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;div>123&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 2. innerHTML 创建元素</span>        <span class="token keyword">var</span> inner <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.inner'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             inner<span class="token punctuation">.</span>innerHTML <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;a href="#">百度&lt;/a>'</span>         <span class="token punctuation">}</span>        <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'&lt;a href="#">百度&lt;/a>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        inner<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 3. document.createElement() 创建元素</span>        <span class="token keyword">var</span> create <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.create'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            create<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-1-6-innerTHML和createElement效率对比"><a href="#1-1-6-innerTHML和createElement效率对比" class="headerlink" title="1.1.6 innerTHML和createElement效率对比"></a>1.1.6 innerTHML和createElement效率对比</h3><p><strong>innerHTML字符串拼接方式（效率低）</strong></p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> d1 <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;div style="width:100px; height:2px; border:1px solid blue;">&lt;/div>'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> d2 <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d2 <span class="token operator">-</span> d1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><strong>createElement方式（效率一般）</strong></p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> d1 <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token string">'100px'</span><span class="token punctuation">;</span>            div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'2px'</span><span class="token punctuation">;</span>            div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>border <span class="token operator">=</span> <span class="token string">'1px solid red'</span><span class="token punctuation">;</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> d2 <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d2 <span class="token operator">-</span> d1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><strong>innerHTML数组方式（效率高）</strong></p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> d1 <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'&lt;div style="width:100px; height:2px; border:1px solid blue;">&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> d2 <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d2 <span class="token operator">-</span> d1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h2 id="1-2-DOM的核心总结"><a href="#1-2-DOM的核心总结" class="headerlink" title="1.2. DOM的核心总结"></a>1.2. DOM的核心总结</h2><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-fy5Jxn7I-1584861766733)(images/1551164669434.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-POlOMivm-1584861766733)(images/1551164715018.png)]</p><p>关于dom操作，我们主要针对于元素的操作。主要有创建、增、删、改、查、属性操作、事件操作。</p><h3 id="1-2-1-创建"><a href="#1-2-1-创建" class="headerlink" title="1.2.1. 创建"></a>1.2.1. 创建</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-8yvij6hu-1584861766734)(images/1551164797164.png)]</p><h3 id="1-2-2-增加"><a href="#1-2-2-增加" class="headerlink" title="1.2.2. 增加"></a>1.2.2. 增加</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-3pj8alDm-1584861766735)(images/1551164829832.png)]</p><h3 id="1-2-3-删"><a href="#1-2-3-删" class="headerlink" title="1.2.3. 删"></a>1.2.3. 删</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-IZ8vtoJd-1584861766735)(images/1551164872533.png)]</p><h3 id="1-2-4-改"><a href="#1-2-4-改" class="headerlink" title="1.2.4. 改"></a>1.2.4. 改</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ro9uXFmN-1584861766735)(images/1551164907830.png)]</p><h3 id="1-2-5-查"><a href="#1-2-5-查" class="headerlink" title="1.2.5. 查"></a>1.2.5. 查</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-OMsZyj0N-1584861766735)(images/1551164936214.png)]</p><h3 id="1-2-6-属性操作"><a href="#1-2-6-属性操作" class="headerlink" title="1.2.6. 属性操作"></a>1.2.6. 属性操作</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-aN4fsfZ2-1584861766736)(images/1551164985383.png)]</p><h3 id="1-2-7-事件操作（重点）"><a href="#1-2-7-事件操作（重点）" class="headerlink" title="1.2.7. 事件操作（重点）"></a>1.2.7. 事件操作（重点）</h3><h2 id="1-3-事件高级"><a href="#1-3-事件高级" class="headerlink" title="1.3. 事件高级"></a>1.3. 事件高级</h2><h3 id="1-3-1-注册事件（2种方式）"><a href="#1-3-1-注册事件（2种方式）" class="headerlink" title="1.3.1. 注册事件（2种方式）"></a>1.3.1. 注册事件（2种方式）</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-bdViiMQw-1584861766736)(images/1551165252019.png)]</p><h3 id="1-3-2-事件监听"><a href="#1-3-2-事件监听" class="headerlink" title="1.3.2 事件监听"></a>1.3.2 事件监听</h3><h4 id="addEventListener-事件监听（IE9以后支持）"><a href="#addEventListener-事件监听（IE9以后支持）" class="headerlink" title="addEventListener()事件监听（IE9以后支持）"></a>addEventListener()事件监听（IE9以后支持）</h4><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-gmVtWlii-1584861766737)(images/1551165364122.png)]</p><p>eventTarget.addEventListener()方法将指定的监听器注册到 eventTarget（目标对象）上，当该对象触发指定的事件时，就会执行事件处理函数。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-bSZKVMzc-1584861766737)(images/1551165604792.png)]</p><h4 id="attacheEvent-事件监听（IE678支持）"><a href="#attacheEvent-事件监听（IE678支持）" class="headerlink" title="attacheEvent()事件监听（IE678支持）"></a>attacheEvent()事件监听（IE678支持）</h4><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-31Lsf1if-1584861766738)(images/1551165781836.png)]</p><p>​    eventTarget.attachEvent()方法将指定的监听器注册到 eventTarget（目标对象） 上，当该对象触发指定的事件时，指定的回调函数就会被执行。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-vIwH7HMB-1584861766738)(images/1551165843912.png)]</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>button<span class="token operator">></span>传统注册事件<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span>button<span class="token operator">></span>方法监听注册事件<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span>button<span class="token operator">></span>ie9 attachEvent<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">var</span> btns <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 1. 传统方式注册事件</span>    btns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'hi'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    btns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'hao a u'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">// 2. 事件侦听注册事件 addEventListener </span>   <span class="token comment" spellcheck="true">// (1) 里面的事件类型是字符串 必定加引号 而且不带on</span>   <span class="token comment" spellcheck="true">// (2) 同一个元素 同一个事件可以添加多个侦听器（事件处理程序）</span>    btns<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    btns<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 3. attachEvent ie9以前的版本支持</span>    btns<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">'onclick'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h4 id="事件监听兼容性解决方案"><a href="#事件监听兼容性解决方案" class="headerlink" title="事件监听兼容性解决方案"></a>事件监听兼容性解决方案</h4><p>封装一个函数，函数中判断浏览器的类型：</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-VcT3wZ48-1584861766738)(images/1551166023885.png)]</p><h3 id="1-3-3-删除事件（解绑事件）"><a href="#1-3-3-删除事件（解绑事件）" class="headerlink" title="1.3.3. 删除事件（解绑事件）"></a>1.3.3. 删除事件（解绑事件）</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-4ZNlMtty-1584861766738)(images/1551166185410.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> divs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        divs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 1. 传统方式删除事件</span>            divs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 2. removeEventListener 删除事件</span>        divs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 里面的fn 不需要调用加小括号</span>        <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            divs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 3. detachEvent</span>        divs<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">'onclick'</span><span class="token punctuation">,</span> fn1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            divs<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">detachEvent</span><span class="token punctuation">(</span><span class="token string">'onclick'</span><span class="token punctuation">,</span> fn1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>*<em>删除事件兼容性解决方案 *</em></p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-jcovxFE8-1584861766739)(images/1551166332453.png)]</p><h3 id="1-3-4-DOM事件流"><a href="#1-3-4-DOM事件流" class="headerlink" title="1.3.4. DOM事件流"></a>1.3.4. DOM事件流</h3><blockquote><pre><code>html中的标签都是相互嵌套的，我们可以将元素想象成一个盒子装一个盒子，document是最外面的大盒子。当你单击一个div时，同时你也单击了div的父元素，甚至整个页面。那么是先执行父元素的单击事件，还是先执行div的单击事件 ？？？</code></pre></blockquote><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Zkfdk8c5-1584861766739)(images/1551166423144.png)]</p><blockquote><p>比如：我们给页面中的一个div注册了单击事件，当你单击了div时，也就单击了body，单击了html，单击了document。</p></blockquote><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ak4hOduj-1584861766740)(images/1551166555833.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-8t2nUe5o-1584861766740)(images/1551166581552.png)]</p><blockquote><pre><code>当时的2大浏览器霸主谁也不服谁！IE 提出从目标元素开始，然后一层一层向外接收事件并响应，也就是冒泡型事件流。Netscape（网景公司）提出从最外层开始，然后一层一层向内接收事件并响应，也就是捕获型事件流。江湖纷争，武林盟主也脑壳疼！！！最终，w3c 采用折中的方式，平息了战火，制定了统一的标准 —--— 先捕获再冒泡。现代浏览器都遵循了此标准，所以当事件发生时，会经历3个阶段。</code></pre></blockquote><p>DOM 事件流会经历3个阶段： </p><ol><li><p>捕获阶段</p></li><li><p>当前目标阶段</p></li><li><p>冒泡阶段 </p></li></ol><p>​    我们向水里面扔一块石头，首先它会有一个下降的过程，这个过程就可以理解为从最顶层向事件发生的最具体元素（目标点）的捕获过程；之后会产生泡泡，会在最低点（ 最具体元素）之后漂浮到水面上，这个过程相当于事件冒泡。 </p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-I7ITOclH-1584861766741)(images/1551169007768.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-GYhlJ4dR-1584861766741)(images/1551169042295.png)]</p><p><strong>事件冒泡</strong></p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"father"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"son"</span><span class="token operator">></span>son盒子<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// onclick 和 attachEvent（ie） 在冒泡阶段触发</span>        <span class="token comment" spellcheck="true">// 冒泡阶段 如果addEventListener 第三个参数是 false 或者 省略 </span>        <span class="token comment" spellcheck="true">// son -> father ->body -> html -> document</span>        <span class="token keyword">var</span> son <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.son'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给son注册单击事件</span>        son<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'son'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给father注册单击事件</span>        <span class="token keyword">var</span> father <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        father<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给document注册单击事件，省略第3个参数</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'document'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><strong>事件捕获</strong></p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"father"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"son"</span><span class="token operator">></span>son盒子<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 如果addEventListener() 第三个参数是 true 那么在捕获阶段触发</span>        <span class="token comment" spellcheck="true">// document -> html -> body -> father -> son</span>         <span class="token keyword">var</span> son <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.son'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给son注册单击事件，第3个参数为true</span>         son<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'son'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> father <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给father注册单击事件，第3个参数为true</span>         father<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给document注册单击事件，第3个参数为true</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'document'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-3-5-事件对象"><a href="#1-3-5-事件对象" class="headerlink" title="1.3.5. 事件对象"></a>1.3.5. 事件对象</h3><h4 id="什么是事件对象"><a href="#什么是事件对象" class="headerlink" title="什么是事件对象"></a>什么是事件对象</h4><p>事件发生后，跟事件相关的一系列信息数据的集合都放到这个对象里面，这个对象就是事件对象。</p><p>比如：  </p><ol><li><p>谁绑定了这个事件。</p></li><li><p>鼠标触发事件的话，会得到鼠标的相关信息，如鼠标位置。</p></li><li><p>键盘触发事件的话，会得到键盘的相关信息，如按了哪个键。</p></li></ol><h4 id="事件对象的使用"><a href="#事件对象的使用" class="headerlink" title="事件对象的使用"></a>事件对象的使用</h4><p>事件触发发生时就会产生事件对象，并且系统会以实参的形式传给事件处理函数。</p><p>所以，在事件处理函数中声明1个形参用来接收事件对象。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-1Xea5Tma-1584861766742)(images/1551169537789.png)]</p><h4 id="事件对象的兼容性处理"><a href="#事件对象的兼容性处理" class="headerlink" title="事件对象的兼容性处理"></a>事件对象的兼容性处理</h4><p>事件对象本身的获取存在兼容问题：</p><ol><li><p>标准浏览器中是浏览器给方法传递的参数，只需要定义形参 e 就可以获取到。</p></li><li><p>在 IE6~8 中，浏览器不会给方法传递参数，如果需要的话，需要到 window.event 中获取查找。</p></li></ol><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-BytKxThL-1584861766742)(images/1551169680823.png)]</p><pre><code>只要“||”前面为false, 不管“||”后面是true 还是 false，都返回 “||” 后面的值。只要“||”前面为true, 不管“||”后面是true 还是 false，都返回 “||” 前面的值。</code></pre><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">123</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        div<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 事件对象</span>                e <span class="token operator">=</span> e <span class="token operator">||</span> window<span class="token punctuation">.</span>event<span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h4 id="事件对象的属性和方法"><a href="#事件对象的属性和方法" class="headerlink" title="事件对象的属性和方法"></a>事件对象的属性和方法</h4><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-cxFwLZHI-1584861766743)(images/1551169931778.png)]</p><h4 id="e-target-和-this-的区别"><a href="#e-target-和-this-的区别" class="headerlink" title="e.target 和 this 的区别"></a>e.target 和 this 的区别</h4><ul><li><p>this 是事件绑定的元素（绑定这个事件处理函数的元素） 。</p></li><li><p>e.target 是事件触发的元素。</p></li></ul><blockquote><pre><code>常情况下terget 和 this是一致的，但有一种情况不同，那就是在事件冒泡时（父子元素有相同事件，单击子元素，父元素的事件处理函数也会被触发执行），    这时候this指向的是父元素，因为它是绑定事件的元素对象，    而target指向的是子元素，因为他是触发事件的那个具体元素对象。</code></pre></blockquote><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token number">123</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        div<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// e.target 和 this指向的都是div</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>事件冒泡下的e.target和this</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>abc<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>abc<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>abc<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ul<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token comment" spellcheck="true">// 我们给ul 绑定了事件  那么this 就指向ul  </span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ul</span>              <span class="token comment" spellcheck="true">// e.target 触发了事件的对象 我们点击的是li e.target 指向的就是li</span>              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// li</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-3-6-阻止默认行为"><a href="#1-3-6-阻止默认行为" class="headerlink" title="1.3.6 阻止默认行为"></a>1.3.6 阻止默认行为</h3><blockquote><p>html中一些标签有默认行为，例如a标签被单击后，默认会进行页面跳转。</p></blockquote><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://www.baidu.com"</span><span class="token operator">></span>百度<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 2. 阻止默认行为 让链接不跳转 </span>        <span class="token keyword">var</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>             e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//  dom 标准写法</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 3. 传统的注册方式</span>        a<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 普通浏览器 e.preventDefault();  方法</span>            e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 低版本浏览器 ie678  returnValue  属性</span>            e<span class="token punctuation">.</span>returnValue <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 我们可以利用return false 也能阻止默认行为 没有兼容性问题</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-3-7-阻止事件冒泡"><a href="#1-3-7-阻止事件冒泡" class="headerlink" title="1.3.7 阻止事件冒泡"></a>1.3.7 阻止事件冒泡</h3><p>事件冒泡本身的特性，会带来的坏处，也会带来的好处。</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-alftzO30-1584861766743)(images/1551171467194.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"father"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"son"</span><span class="token operator">></span>son儿子<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> son <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.son'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给son注册单击事件</span>        son<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'son'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// stop 停止  Propagation 传播</span>            window<span class="token punctuation">.</span>event<span class="token punctuation">.</span>cancelBubble <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 非标准 cancel 取消 bubble 泡泡</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> father <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给father注册单击事件</span>        father<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给document注册单击事件</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'document'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><strong>阻止事件冒泡的兼容性处理</strong></p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-wIO8Ljfz-1584861766743)(images/1551171657513.png)]</p><h3 id="1-3-8-事件委托"><a href="#1-3-8-事件委托" class="headerlink" title="1.3.8 事件委托"></a>1.3.8 事件委托</h3><p>事件冒泡本身的特性，会带来的坏处，也会带来的好处。</p><h4 id="什么是事件委托"><a href="#什么是事件委托" class="headerlink" title="什么是事件委托"></a>什么是事件委托</h4><pre><code>把事情委托给别人，代为处理。</code></pre><p>事件委托也称为事件代理，在 jQuery 里面称为事件委派。</p><blockquote><p>说白了就是，不给子元素注册事件，给父元素注册事件，把处理代码在父元素的事件中执行。</p></blockquote><p><strong>生活中的代理：</strong></p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-zvD6r1lf-1584861766743)(images/1551172082624.png)]</p><p><strong>js事件中的代理：</strong></p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-sM8TSNku-1584861766744)(images/1551172159273.png)]</p><h4 id="事件委托的原理"><a href="#事件委托的原理" class="headerlink" title="事件委托的原理"></a>事件委托的原理</h4><p>​    给父元素注册事件，利用事件冒泡，当子元素的事件触发，会冒泡到父元素，然后去控制相应的子元素。</p><h4 id="事件委托的作用"><a href="#事件委托的作用" class="headerlink" title="事件委托的作用"></a>事件委托的作用</h4><ul><li><p>我们只操作了一次 DOM ，提高了程序的性能。</p></li><li><p>动态新创建的子元素，也拥有事件。</p></li></ul><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>知否知否，点我应有弹框在手！<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>知否知否，点我应有弹框在手！<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>知否知否，点我应有弹框在手！<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>知否知否，点我应有弹框在手！<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>知否知否，点我应有弹框在手！<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 事件委托的核心原理：给父节点添加侦听器， 利用事件冒泡影响每一个子节点</span>        <span class="token keyword">var</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ul<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// e.target 这个可以得到我们点击的对象</span>            e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'pink'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h2 id="1-4-常用鼠标事件"><a href="#1-4-常用鼠标事件" class="headerlink" title="1.4. 常用鼠标事件"></a>1.4. 常用鼠标事件</h2><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-8EdtwqtV-1584861766744)(images/1551172699854.png)]</p><h3 id="1-4-1-案例：禁止选中文字和禁止右键菜单"><a href="#1-4-1-案例：禁止选中文字和禁止右键菜单" class="headerlink" title="1.4.1 案例：禁止选中文字和禁止右键菜单"></a>1.4.1 案例：禁止选中文字和禁止右键菜单</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-rrAUUTBa-1584861766744)(images/1551172755484.png)]</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>body<span class="token operator">></span>    我是一段不愿意分享的文字    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 1. contextmenu 我们可以禁用右键菜单</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'contextmenu'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 2. 禁止选中文字 selectstart</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'selectstart'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h3 id="1-4-2-鼠标事件对象"><a href="#1-4-2-鼠标事件对象" class="headerlink" title="1.4.2 鼠标事件对象"></a>1.4.2 鼠标事件对象</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-VQVy3do7-1584861766745)(images/1551173103741.png)]</p><h3 id="1-4-3-获取鼠标在页面的坐标"><a href="#1-4-3-获取鼠标在页面的坐标" class="headerlink" title="1.4.3 获取鼠标在页面的坐标"></a>1.4.3 获取鼠标在页面的坐标</h3><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 鼠标事件对象 MouseEvent</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 1. client 鼠标在可视区的x和y坐标</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientX<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientY<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'---------------------'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 2. page 鼠标在页面文档的x和y坐标</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageX<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>pageY<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'---------------------'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 3. screen 鼠标在电脑屏幕的x和y坐标</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>screenX<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>screenY<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="1-4-4-案例：跟随鼠标的天使"><a href="#1-4-4-案例：跟随鼠标的天使" class="headerlink" title="1.4.4 案例：跟随鼠标的天使"></a>1.4.4 案例：跟随鼠标的天使</h3><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-8GI3u8Id-1584861766745)(images/1551173172613.png)]</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-u2Zs5C0R-1584861766746)(images/1551173186812.png)]</p><pre class=" language-js"><code class="language-js">    <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"images/angel.gif"</span> alt<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> pic <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 1. mousemove只要我们鼠标移动1px 就会触发这个事件</span>            <span class="token comment" spellcheck="true">// 2.核心原理： 每次鼠标移动，我们都会获得最新的鼠标坐标， </span>            <span class="token comment" spellcheck="true">// 把这个x和y坐标做为图片的top和left 值就可以移动图片</span>            <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX<span class="token punctuation">;</span>            <span class="token keyword">var</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY<span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'x坐标是'</span> <span class="token operator">+</span> x<span class="token punctuation">,</span> <span class="token string">'y坐标是'</span> <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//3 . 千万不要忘记给left 和top 添加px 单位</span>            pic<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> x <span class="token operator">-</span> <span class="token number">50</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>            pic<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> y <span class="token operator">-</span> <span class="token number">40</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web APIs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小节感悟~~</title>
      <link href="/2020/03/09/xiao-jie-gan-wu/"/>
      <url>/2020/03/09/xiao-jie-gan-wu/</url>
      
        <content type="html"><![CDATA[<p>前面一直在编写数组的翻转和排序<br>每次都敲键盘编写几次<br>今天学到了直接可以调用。<br>卧槽还可以这样玩~<br>        var arr = [‘昊哥’, ‘red’, ‘bule’];<br>        arr.reverse();<br>        console.log(arr);<br>        // 数组排序(冒泡排序)<br>        var arr1 = [13, 4, 77, 1, 7];<br>        arr1.sort(function(a, b) {<br>            // return a - b; //这个是升序排列顺序<br>            return b - a; //这个是降序排列顺序<br>        });<br>        console.log(arr1);</p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组翻转 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>标签常用单词整理合集</title>
      <link href="/2020/03/09/biao-qian-chang-yong-dan-ci-zheng-li-he-ji/"/>
      <url>/2020/03/09/biao-qian-chang-yong-dan-ci-zheng-li-he-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="1-详情页-detail-html-常用单词"><a href="#1-详情页-detail-html-常用单词" class="headerlink" title="1). 详情页 detail.html  常用单词"></a>1). 详情页 detail.html  常用单词</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>主体</td><td>de_container</td></tr><tr><td>面包屑导航</td><td>crumb_wrap</td></tr><tr><td>产品介绍</td><td>product_intro   （ introduction介绍）</td></tr><tr><td>预览包</td><td>preview_wrap（左侧部分）</td></tr><tr><td>预览缩略图</td><td>preview_img</td></tr><tr><td>预览列表</td><td>preview_list</td></tr><tr><td>左按钮</td><td>arrow_prev</td></tr><tr><td>右按钮</td><td>arrow_next</td></tr><tr><td>小图列表</td><td>preview_items</td></tr><tr><td>产品详细信息区域</td><td>itemInfo_wrap （右侧部分）</td></tr><tr><td>头部名称</td><td>sku_name       skull  头骨</td></tr><tr><td>新闻</td><td>news</td></tr><tr><td>摘要</td><td>summary</td></tr><tr><td>评价</td><td>remark</td></tr><tr><td>价格摘要</td><td>summary_price</td></tr><tr><td>配送至</td><td>summary_stock</td></tr><tr><td>支持</td><td>summary_support</td></tr><tr><td>选择</td><td>choose</td></tr><tr><td>选择按钮组</td><td>choose_btns</td></tr><tr><td>选择数量</td><td>choose_amount</td></tr><tr><td>减去</td><td>reduce</td></tr><tr><td>加入购物车</td><td>addshopcar</td></tr><tr><td>产品细节</td><td>product_detail      （   detail描述）</td></tr><tr><td>左侧边</td><td>aside</td></tr><tr><td>详细描述</td><td>detail</td></tr></tbody></table><h2 id="2-面包屑导航"><a href="#2-面包屑导航" class="headerlink" title="2). 面包屑导航"></a>2). 面包屑导航</h2><ul><li>crumb_wrap   面包屑导航</li><li>关于面包屑导航的由来是源于一则童话故事的一个词语：汉泽尔和格蕾特尔两个人在穿过森林是，为了避免找不到回家的路，他们在沿途走过的地方都会撒下面包屑以便于根据这些面包屑找到回家的路。</li></ul><h2 id="3-产品介绍-模块"><a href="#3-产品介绍-模块" class="headerlink" title="3). 产品介绍 模块"></a>3). 产品介绍 模块</h2><ul><li>1号盒子 本模块 命名为产品模块   product_intro   （ introduction介绍）</li><li>此模块不要给高度  因为右侧的模块内容高度不固定</li><li>里面有2个盒子  分为是2号盒子 和  3号盒子  </li><li>2号盒子为  预览区域  preview_wrap   给宽度，给高度， 左浮动</li><li>3号盒子为  产品详细信息区域  itemInfo_wrap 给宽度 ，不要给高度  左侧浮动 </li></ul><h2 id="4-预览区域制作"><a href="#4-预览区域制作" class="headerlink" title="4).  预览区域制作"></a>4).  预览区域制作</h2><ul><li>1号盒子 为  图片预览   命名为   preview_img    注意里面的图片，切图的时候是 398*398 像素的</li><li>2号盒子 为 预览列表   命名为  preview_list</li></ul><h3 id="3-1-preview-list-制作"><a href="#3-1-preview-list-制作" class="headerlink" title="3.1 preview_list 制作"></a>3.1 preview_list 制作</h3><ul><li>盒子 有左右按钮   arrow_prev   arrow_next  用定位即可 </li><li>中间 用 ul  命名为    list-item    给宽度和高度 然后  margin: 0 auto;  水平居中对齐即可</li></ul><h2 id="5-产品详细信息区域制作-itemInfo-wrap"><a href="#5-产品详细信息区域制作-itemInfo-wrap" class="headerlink" title="5). 产品详细信息区域制作 itemInfo_wrap"></a>5). 产品详细信息区域制作 itemInfo_wrap</h2><ul><li><p>此盒子命名为 itemInfo</p></li><li><p>1 号盒子 为 头部 sku_name    </p></li><li><p>2 号盒子 为 最新新闻  news  </p></li><li><p>3号盒子 为  产品详细摘要  命名为  summary （摘要的意思）   之所以下面都是摘要部分，因为里面格式基本相同。</p></li><li><p>下面为详细命名</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>头部名称</td><td>sku_name       skull  头骨</td></tr><tr><td>新闻</td><td>news</td></tr><tr><td>摘要</td><td>summary</td></tr><tr><td>评价</td><td>remark</td></tr><tr><td>价格摘要</td><td>summary_price</td></tr><tr><td>促销摘要</td><td>summary_promotion</td></tr><tr><td>配送至</td><td>summary_stock</td></tr><tr><td>支持</td><td>summary_support</td></tr><tr><td>选择</td><td>choose</td></tr><tr><td>选择版本</td><td>choose_version</td></tr><tr><td>选择类型</td><td>choose_type</td></tr><tr><td>选择按钮组</td><td>choose_btns</td></tr><tr><td>选择数量</td><td>choose_amount        add 是加的意思</td></tr><tr><td>减去</td><td>reduce     cursor: not-allowed;  禁止符号</td></tr><tr><td>加入购物车</td><td>addshopcar</td></tr></tbody></table></li></ul><h2 id="6-产品细节模块-product-detail"><a href="#6-产品细节模块-product-detail" class="headerlink" title="6).  产品细节模块 product_detail"></a>6).  产品细节模块 product_detail</h2><ul><li>大盒子为 product_detail 模块 不要给高度 ，别忘记清除浮动</li><li>1号盒子 左侧浮动 命名为 aside  有宽度 不给高度</li><li>2号盒子 右侧浮动  命名为 detail   有宽度不给高度</li></ul><h3 id="6-1-aside-布局"><a href="#6-1-aside-布局" class="headerlink" title="6.1) aside 布局"></a>6.1) aside 布局</h3><ul><li>1 号盒子 命名为 tab_list   给高度就好了 ，里面 放 ul 和 li   注意这是 tab栏切换布局</li><li>2 号盒子  命名为  tab_con    里面还包含 很多个ul.item 和 上面的 tab_list 里面的li一一对应。   </li></ul><h3 id="6-2-detail-布局"><a href="#6-2-detail-布局" class="headerlink" title="6.2) detail 布局"></a>6.2) detail 布局</h3><ul><li>1 号盒子 命名为 detail_tab_list   给高度就好了 ，里面 放 ul 和 li   注意这是 tab栏切换布局</li><li>2 号盒子  命名为  detail_tab_con    里面还包含 很多个ul.item 和 上面的 tab_list 里面的li一一对应。   </li></ul><h2 id="7-注册页面-register"><a href="#7-注册页面-register" class="headerlink" title="7. 注册页面 register"></a>7. 注册页面 register</h2><p>注册页面</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>注册专区</td><td>registerarea</td></tr><tr><td>注册内容</td><td>reg-form</td></tr><tr><td>错误的</td><td>error</td></tr><tr><td>成功的</td><td>success</td></tr><tr><td>默认的</td><td>default</td></tr></tbody></table><h3 id="7-1-registerarea布局"><a href="#7-1-registerarea布局" class="headerlink" title="7.1 registerarea布局"></a>7.1 registerarea布局</h3><h1 id="2-课程总结"><a href="#2-课程总结" class="headerlink" title="2. 课程总结"></a>2. 课程总结</h1><ol><li>html 学的就是常用标签， 就是基本盒子</li><li>css 就是用来美化布局网页。</li><li>html+css 是没有逻辑可言的，基本就是搭积木摆放盒子的过程，你需要的是耐心。</li><li>对同学们来说，现在最困难的是 布局结构 。欠缺分析页面布局的能力</li><li>多看别人写的页面，模仿人家的布局，每次写页面总会有新的收获。</li><li>错误总是在所难免，一定要学会利用chrome 调试工具， 他们能快速帮排查错误。你还需要细心。</li><li>学好定位，对后面学习JavaScript 有很大的帮助。</li><li>后面的课程会更精彩，尽情期待。。。</li><li>记住的口号：  拼死也要克服它 （pink ）</li></ol>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签整理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目总结代码规范</title>
      <link href="/2020/03/08/xiang-mu-zong-jie-dai-ma-gui-fan/"/>
      <url>/2020/03/08/xiang-mu-zong-jie-dai-ma-gui-fan/</url>
      
        <content type="html"><![CDATA[<p>代码规范</p><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>欢迎使用品优购代码规范， 这个是我借鉴京东前端代码规范，组织的品优购内部规范。旨在增强团队开发协作、提高代码质量和打造开发基石的编码规范，</p><p>以下规范是团队基本约定的内容，必须严格遵循。</p><h4 id="HTML规范"><a href="#HTML规范" class="headerlink" title="HTML规范"></a>HTML规范</h4><p>基于 <a href="http://www.w3.org/" target="_blank" rel="noopener">W3C</a>、<a href="https://developer.apple.com/" target="_blank" rel="noopener">苹果开发者</a> 等官方文档，并结合团队业务和开发过程中总结的规范约定，让页面HTML代码更具语义性。</p><h4 id="图片规范"><a href="#图片规范" class="headerlink" title="图片规范"></a>图片规范</h4><p>了解各种图片格式特性，根据特性制定图片规范，包括但不限于图片的质量约定、图片引入方式、图片合并处理等，旨在从图片层面优化页面性能。</p><h4 id="CSS规范"><a href="#CSS规范" class="headerlink" title="CSS规范"></a>CSS规范</h4><p>统一规范团队 CSS 代码书写风格和使用 CSS 预编译语言语法风格，提供常用媒体查询语句和浏览器私有属性引用，并从业务层面统一规范常用模块的引用。</p><h4 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h4><p>从 <code>目录</code>、<code>图片</code>、<code>HTML/CSS文件</code>、<code>ClassName</code> 的命名等层面约定规范团队的命名习惯，增强团队代码的可读性。</p><h2 id="2-HTML-规范"><a href="#2-HTML-规范" class="headerlink" title="2. HTML 规范"></a>2. HTML 规范</h2><h3 id="DOCTYPE-声明"><a href="#DOCTYPE-声明" class="headerlink" title="DOCTYPE 声明"></a>DOCTYPE 声明</h3><p>HTML文件必须加上 DOCTYPE 声明，并统一使用 HTML5 的文档声明：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span></code></pre><p><strong>HTML5标准模版</strong></p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>HTML5标准模版<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="页面语言lang"><a href="#页面语言lang" class="headerlink" title="页面语言lang"></a>页面语言lang</h3><p>推荐使用属性值 <code>cmn-Hans-CN</code>（简体, 中国大陆），但是考虑浏览器和操作系统的兼容性，目前仍然使用 <code>zh-CN</code> 属性值</p><pre><code>&lt;html lang=&quot;zh-CN&quot;&gt;</code></pre><p>更多地区语言参考：</p><pre><code>zh-SG 中文 (简体, 新加坡)   对应 cmn-Hans-SG 普通话 (简体, 新加坡)zh-HK 中文 (繁体, 香港)     对应 cmn-Hant-HK 普通话 (繁体, 香港)zh-MO 中文 (繁体, 澳门)     对应 cmn-Hant-MO 普通话 (繁体, 澳门)zh-TW 中文 (繁体, 台湾)     对应 cmn-Hant-TW 普通话 (繁体, 台湾)</code></pre><h3 id="charset-字符集合"><a href="#charset-字符集合" class="headerlink" title="charset 字符集合"></a>charset 字符集合</h3><p>一般情况下统一使用 “UTF-8” 编码</p><pre><code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code></pre><p>由于历史原因，有些业务可能会使用 “GBK” 编码</p><pre><code>&lt;meta charset=&quot;GBK&quot;&gt;</code></pre><p>请尽量统一写成标准的 “UTF-8”，不要写成 “utf-8” 或 “utf8” 或 “UTF8”。根据 <a href="http://www.ietf.org/rfc/rfc3629" target="_blank" rel="noopener">IETF对UTF-8的定义</a>，其编码标准的写法是 “UTF-8”；而 UTF8 或 utf8 的写法只是出现在某些编程系统中，如 .NET framework 的类 System.Text.Encoding 中的一个属性名就叫 UTF8。</p><h3 id="书写风格"><a href="#书写风格" class="headerlink" title="书写风格"></a>书写风格</h3><h4 id="HTML代码大小写"><a href="#HTML代码大小写" class="headerlink" title="HTML代码大小写"></a>HTML代码大小写</h4><p>HTML标签名、类名、标签属性和大部分属性值统一用小写</p><p><em>推荐：</em></p><pre><code>&lt;div class=&quot;demo&quot;&gt;&lt;/div&gt;</code></pre><p><em>不推荐：</em></p><pre><code>&lt;div class=&quot;DEMO&quot;&gt;&lt;/div&gt;&lt;DIV CLASS=&quot;DEMO&quot;&gt;&lt;/DIV&gt;</code></pre><h3 id="类型属性"><a href="#类型属性" class="headerlink" title="类型属性"></a>类型属性</h3><p>不需要为 CSS、JS 指定类型属性，HTML5 中默认已包含</p><p><em>推荐：</em></p><pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;&quot; &gt;&lt;script src=&quot;&quot;&gt;&lt;/script&gt;</code></pre><p><em>不推荐：</em></p><pre><code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&quot; &gt;&lt;script type=&quot;text/javascript&quot; src=&quot;&quot; &gt;&lt;/script&gt;</code></pre><h3 id="元素属性"><a href="#元素属性" class="headerlink" title="元素属性"></a>元素属性</h3><ul><li>元素属性值使用双引号语法</li><li>元素属性值可以写上的都写上</li></ul><p><em>推荐：</em></p><pre><code>&lt;input type=&quot;text&quot;&gt;&lt;input type=&quot;radio&quot; name=&quot;name&quot; checked=&quot;checked&quot; &gt;</code></pre><p><em>不推荐：</em></p><pre><code>&lt;input type=text&gt;    &lt;input type=&#39;text&#39;&gt;&lt;input type=&quot;radio&quot; name=&quot;name&quot; checked &gt;</code></pre><h3 id="特殊字符引用"><a href="#特殊字符引用" class="headerlink" title="特殊字符引用"></a>特殊字符引用</h3><p>文本可以和字符引用混合出现。这种方法可以用来转义在文本中不能合法出现的字符。</p><p>在 HTML 中不能使用小于号 “&lt;” 和大于号 “&gt;”特殊字符，浏览器会将它们作为标签解析，若要正确显示，在 HTML 源代码中使用字符实体</p><p><em>推荐：</em></p><pre><code>&lt;a href=&quot;#&quot;&gt;more&amp;gt;&amp;gt;&lt;/a&gt;</code></pre><p><em>不推荐：</em></p><pre><code>&lt;a href=&quot;#&quot;&gt;more&gt;&gt;&lt;/a&gt;</code></pre><h3 id="代码缩进"><a href="#代码缩进" class="headerlink" title="代码缩进"></a>代码缩进</h3><p>统一使用四个空格进行代码缩进，使得各编辑器表现一致（各编辑器有相关配置）</p><pre><code>&lt;div class=&quot;jdc&quot;&gt;    &lt;a href=&quot;#&quot;&gt;&lt;/a&gt;&lt;/div&gt;</code></pre><h3 id="代码嵌套"><a href="#代码嵌套" class="headerlink" title="代码嵌套"></a>代码嵌套</h3><p>元素嵌套规范，每个块状元素独立一行，内联元素可选</p><p><em>推荐：</em></p><pre><code>&lt;div&gt;    &lt;h1&gt;&lt;/h1&gt;    &lt;p&gt;&lt;/p&gt;&lt;/div&gt;    &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</code></pre><p><em>不推荐：</em></p><pre><code>&lt;div&gt;    &lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;    &lt;p&gt;     &lt;span&gt;&lt;/span&gt;    &lt;span&gt;&lt;/span&gt;&lt;/p&gt;</code></pre><p>段落元素与标题元素只能嵌套内联元素</p><p><em>推荐：</em></p><pre><code>&lt;h1&gt;&lt;span&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</code></pre><p><em>不推荐：</em></p><pre><code>&lt;h1&gt;&lt;div&gt;&lt;/div&gt;&lt;/h1&gt;&lt;p&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/p&gt;</code></pre><h2 id="3-图片规范"><a href="#3-图片规范" class="headerlink" title="3. 图片规范"></a>3. 图片规范</h2><h3 id="内容图"><a href="#内容图" class="headerlink" title="内容图"></a>内容图</h3><p>内容图多以商品图等照片类图片形式存在，颜色较为丰富，文件体积较大</p><ul><li>优先考虑 JPEG 格式，条件允许的话优先考虑 WebP 格式</li><li>尽量不使用PNG格式，PNG8 色位太低，PNG24 压缩率低，文件体积大</li><li><strong>PC平台单张的图片的大小不应大于 200KB。</strong></li></ul><h3 id="背景图"><a href="#背景图" class="headerlink" title="背景图"></a>背景图</h3><p>背景图多为图标等颜色比较简单、文件体积不大、起修饰作用的图片</p><ul><li>PNG 与 GIF 格式，优先考虑使用 PNG 格式,PNG格式允许更多的颜色并提供更好的压缩率</li><li>图像颜色比较简单的，如纯色块线条图标，优先考虑使用 PNG8 格式，避免不使用 JPEG 格式</li><li>图像颜色丰富而且图片文件不太大的（40KB 以下）或有半透明效果的优先考虑 PNG24 格式</li><li>图像颜色丰富而且文件比较大的（40KB - 200KB）优先考虑 JPEG 格式</li><li>条件允许的，优先考虑 WebP 代替 PNG 和 JPEG 格式</li></ul><h2 id="4-CSS规范"><a href="#4-CSS规范" class="headerlink" title="4. CSS规范"></a>4. CSS规范</h2><h3 id="代码格式化"><a href="#代码格式化" class="headerlink" title="代码格式化"></a>代码格式化</h3><p>样式书写一般有两种：一种是紧凑格式 (Compact)</p><pre><code>.jdc{ display: block;width: 50px;}</code></pre><p>一种是展开格式（Expanded）</p><pre><code>.jdc {    display: block;    width: 50px;}</code></pre><p><strong>团队约定</strong></p><p>统一使用展开格式书写样式</p><h3 id="代码大小写"><a href="#代码大小写" class="headerlink" title="代码大小写"></a>代码大小写</h3><p>样式选择器，属性名，属性值关键字全部使用小写字母书写，属性字符串允许使用大小写。</p><pre><code>/* 推荐 */.jdc{    display:block;}/* 不推荐 */.JDC{    DISPLAY:BLOCK;}</code></pre><h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><ul><li>尽量少用通用选择器 <code>*</code></li><li>不使用 ID 选择器</li><li>不使用无具体语义定义的标签选择器</li></ul><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 推荐 */</span><span class="token selector"><span class="token class">.jdc</span> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.jdc</span> li </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.jdc</span> li p</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 不推荐 */</span><span class="token selector">*</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#jdc</span> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.jdc</span> div</span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h3 id="代码缩进-1"><a href="#代码缩进-1" class="headerlink" title="代码缩进"></a>代码缩进</h3><p>统一使用四个空格进行代码缩进，使得各编辑器表现一致（各编辑器有相关配置）</p><pre><code>.jdc {    width: 100%;    height: 100%;}</code></pre><h3 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h3><p>每个属性声明末尾都要加分号；</p><pre><code>.jdc {    width: 100%;    height: 100%;}</code></pre><h3 id="代码易读性"><a href="#代码易读性" class="headerlink" title="代码易读性"></a>代码易读性</h3><p>左括号与类名之间一个空格，冒号与属性值之间一个空格</p><p><em>推荐：</em></p><pre><code>.jdc {     width: 100%; }</code></pre><p><em>不推荐：</em></p><pre><code>.jdc{     width:100%;}</code></pre><p>逗号分隔的取值，逗号之后一个空格</p><p><em>推荐：</em></p><pre><code>.jdc {    box-shadow: 1px 1px 1px #333, 2px 2px 2px #ccc;}</code></pre><p><em>不推荐：</em></p><pre><code>.jdc {    box-shadow: 1px 1px 1px #333,2px 2px 2px #ccc;}</code></pre><p>为单个css选择器或新申明开启新行</p><p><em>推荐：</em></p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.jdc</span>, <span class="token class">.jdc_logo</span>, <span class="token class">.jdc_hd</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#ff0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.nav</span></span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><em>不推荐：</em></p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.jdc</span>,jdc_logo,<span class="token class">.jdc_hd</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#ff0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.nav</span></span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>颜色值 <code>rgb()</code> <code>rgba()</code> <code>hsl()</code> <code>hsla()</code> <code>rect()</code> 中不需有空格，且取值不要带有不必要的 0</p><p><em>推荐：</em></p><pre><code>.jdc {    color: rgba(255,255,255,.5);}</code></pre><p><em>不推荐：</em></p><pre><code>.jdc {    color: rgba( 255, 255, 255, 0.5 );}</code></pre><p>属性值十六进制数值能用简写的尽量用简写</p><p><em>推荐：</em></p><pre><code>.jdc {    color: #fff;}</code></pre><p><em>不推荐：</em></p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.jdc</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#ffffff</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>不要为 <code>0</code> 指明单位</p><p><em>推荐：</em></p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.jdc</span> </span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><em>不推荐：</em></p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.jdc</span> </span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span>px <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="属性值引号"><a href="#属性值引号" class="headerlink" title="属性值引号"></a>属性值引号</h3><p>css属性值需要用到引号时，统一使用单引号</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 推荐 */</span><span class="token selector"><span class="token class">.jdc</span> </span><span class="token punctuation">{</span>     <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Hiragino Sans GB'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 不推荐 */</span><span class="token selector"><span class="token class">.jdc</span> </span><span class="token punctuation">{</span>     <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Hiragino Sans GB"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="属性书写顺序"><a href="#属性书写顺序" class="headerlink" title="属性书写顺序"></a>属性书写顺序</h3><p>建议遵循以下顺序：</p><ol><li>布局定位属性：display / position / float / clear / visibility / overflow（建议 display 第一个写，毕竟关系到模式）</li><li>自身属性：width / height / margin / padding / border / background</li><li>文本属性：color / font / text-decoration / text-align / vertical-align / white- space / break-word</li><li>其他属性（CSS3）：content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient …</li></ol><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.jdc</span> </span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">20</span>px <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> Arial, <span class="token string">'Helvetica Neue'</span>, Helvetica, sans-serif<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#333</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">-o-border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">-ms-border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><a href="https://www.mozilla.org/css/base/content.css" target="_blank" rel="noopener">mozilla官方属性顺序推荐</a></p><h2 id="命名规范-1"><a href="#命名规范-1" class="headerlink" title="命名规范"></a>命名规范</h2><p>由历史原因及个人习惯引起的 DOM 结构、命名不统一，导致不同成员在维护同一页面时，效率低下，迭代、维护成本极高。</p><h3 id="目录命名"><a href="#目录命名" class="headerlink" title="目录命名"></a>目录命名</h3><ul><li>项目文件夹：pinyougou</li><li>样式文件夹：css</li><li>脚本文件夹：js</li><li>样式类图片文件夹：img</li><li>产品类图片文件夹： upload</li><li>字体类文件夹： fonts</li></ul><h3 id="ClassName命名"><a href="#ClassName命名" class="headerlink" title="ClassName命名"></a>ClassName命名</h3><p>ClassName的命名应该尽量精短、明确，必须以<strong>字母开头命名</strong>，且<strong>全部字母为小写</strong>，单词之间<strong>统一使用下划线</strong> “_” 连接</p><p>.nav_top</p><h4 id="常用命名推荐"><a href="#常用命名推荐" class="headerlink" title="常用命名推荐"></a>常用命名推荐</h4><p><strong>注意</strong>：ad、banner、gg、guanggao 等有机会和广告挂勾的字眠不建议直接用来做ClassName，因为有些浏览器插件（Chrome的广告拦截插件等）会直接过滤这些类名，因此</p><pre><code>&lt;div class=&quot;ad&quot;&gt;&lt;/div&gt;</code></pre><p>这种广告的英文或拼音类名不应该出现</p><p>另外，<strong>敏感不和谐字眼</strong>也不应该出现，如：</p><pre><code>&lt;div class=&quot;fuck&quot;&gt;&lt;/div&gt;&lt;div class=&quot;jer&quot;&gt;&lt;/div&gt;&lt;div class=&quot;sm&quot;&gt;&lt;/div&gt;&lt;div class=&quot;gcd&quot;&gt;&lt;/div&gt; &lt;div class=&quot;ass&quot;&gt;&lt;/div&gt; &lt;div class=&quot;KMT&quot;&gt;&lt;/div&gt; ...</code></pre><table><thead><tr><th>ClassName</th><th>含义</th></tr></thead><tbody><tr><td>about</td><td>关于</td></tr><tr><td>account</td><td>账户</td></tr><tr><td>arrow</td><td>箭头图标</td></tr><tr><td>article</td><td>文章</td></tr><tr><td>aside</td><td>边栏</td></tr><tr><td>audio</td><td>音频</td></tr><tr><td>avatar</td><td>头像</td></tr><tr><td>bg,background</td><td>背景</td></tr><tr><td>bar</td><td>栏（工具类）</td></tr><tr><td>branding</td><td>品牌化</td></tr><tr><td>crumb,breadcrumbs</td><td>面包屑</td></tr><tr><td>btn,button</td><td>按钮</td></tr><tr><td>caption</td><td>标题，说明</td></tr><tr><td>category</td><td>分类</td></tr><tr><td>chart</td><td>图表</td></tr><tr><td>clearfix</td><td>清除浮动</td></tr><tr><td>close</td><td>关闭</td></tr><tr><td>col,column</td><td>列</td></tr><tr><td>comment</td><td>评论</td></tr><tr><td>community</td><td>社区</td></tr><tr><td>container</td><td>容器</td></tr><tr><td>content</td><td>内容</td></tr><tr><td>copyright</td><td>版权</td></tr><tr><td>current</td><td>当前态，选中态</td></tr><tr><td>default</td><td>默认</td></tr><tr><td>description</td><td>描述</td></tr><tr><td>details</td><td>细节</td></tr><tr><td>disabled</td><td>不可用</td></tr><tr><td>entry</td><td>文章，博文</td></tr><tr><td>error</td><td>错误</td></tr><tr><td>even</td><td>偶数，常用于多行列表或表格中</td></tr><tr><td>fail</td><td>失败（提示）</td></tr><tr><td>feature</td><td>专题</td></tr><tr><td>fewer</td><td>收起</td></tr><tr><td>field</td><td>用于表单的输入区域</td></tr><tr><td>figure</td><td>图</td></tr><tr><td>filter</td><td>筛选</td></tr><tr><td>first</td><td>第一个，常用于列表中</td></tr><tr><td>footer</td><td>页脚</td></tr><tr><td>forum</td><td>论坛</td></tr><tr><td>gallery</td><td>画廊</td></tr><tr><td>group</td><td>模块，清除浮动</td></tr><tr><td>header</td><td>页头</td></tr><tr><td>help</td><td>帮助</td></tr><tr><td>hide</td><td>隐藏</td></tr><tr><td>hightlight</td><td>高亮</td></tr><tr><td>home</td><td>主页</td></tr><tr><td>icon</td><td>图标</td></tr><tr><td>info,information</td><td>信息</td></tr><tr><td>last</td><td>最后一个，常用于列表中</td></tr><tr><td>links</td><td>链接</td></tr><tr><td>login</td><td>登录</td></tr><tr><td>logout</td><td>退出</td></tr><tr><td>logo</td><td>标志</td></tr><tr><td>main</td><td>主体</td></tr><tr><td>menu</td><td>菜单</td></tr><tr><td>meta</td><td>作者、更新时间等信息栏，一般位于标题之下</td></tr><tr><td>module</td><td>模块</td></tr><tr><td>more</td><td>更多（展开）</td></tr><tr><td>msg,message</td><td>消息</td></tr><tr><td>nav,navigation</td><td>导航</td></tr><tr><td>next</td><td>下一页</td></tr><tr><td>nub</td><td>小块</td></tr><tr><td>odd</td><td>奇数，常用于多行列表或表格中</td></tr><tr><td>off</td><td>鼠标离开</td></tr><tr><td>on</td><td>鼠标移过</td></tr><tr><td>output</td><td>输出</td></tr><tr><td>pagination</td><td>分页</td></tr><tr><td>pop,popup</td><td>弹窗</td></tr><tr><td>preview</td><td>预览</td></tr><tr><td>previous</td><td>上一页</td></tr><tr><td>primary</td><td>主要</td></tr><tr><td>progress</td><td>进度条</td></tr><tr><td>promotion</td><td>促销</td></tr><tr><td>rcommd,recommendations</td><td>推荐</td></tr><tr><td>reg,register</td><td>注册</td></tr><tr><td>save</td><td>保存</td></tr><tr><td>search</td><td>搜索</td></tr><tr><td>secondary</td><td>次要</td></tr><tr><td>section</td><td>区块</td></tr><tr><td>selected</td><td>已选</td></tr><tr><td>share</td><td>分享</td></tr><tr><td>show</td><td>显示</td></tr><tr><td>sidebar</td><td>边栏，侧栏</td></tr><tr><td>slide</td><td>幻灯片，图片切换</td></tr><tr><td>sort</td><td>排序</td></tr><tr><td>sub</td><td>次级的，子级的</td></tr><tr><td>submit</td><td>提交</td></tr><tr><td>subscribe</td><td>订阅</td></tr><tr><td>subtitle</td><td>副标题</td></tr><tr><td>success</td><td>成功（提示）</td></tr><tr><td>summary</td><td>摘要</td></tr><tr><td>tab</td><td>标签页</td></tr><tr><td>table</td><td>表格</td></tr><tr><td>txt,text</td><td>文本</td></tr><tr><td>thumbnail</td><td>缩略图</td></tr><tr><td>time</td><td>时间</td></tr><tr><td>tips</td><td>提示</td></tr><tr><td>title</td><td>标题</td></tr><tr><td>video</td><td>视频</td></tr><tr><td>wrap</td><td>容器，包，一般用于最外层</td></tr><tr><td>wrapper</td><td>容器，包，一般用于最外层</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码规范 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
